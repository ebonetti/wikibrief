package wikibrief

import (
	"bytes"
	"encoding/base64"
	"encoding/json"
	"io"
	"reflect"
	"testing"
)

func TestUnit(t *testing.T) {
	b, err := base64.StdEncoding.DecodeString(holyGrail)
	if err != nil {
		t.Error("Error in holyGrail encoding", err)
	}

	it := New(bytes.NewBuffer(b), func(uint32) bool { return true }, func(text string) float64 { return float64(len(text)) })
	s, err0 := it()
	_, err1 := it()
	st := Summary{}
	errt := json.Unmarshal([]byte(holyGrailSummary), &st)

	switch {
	case err0 != nil:
		t.Error("Error while extracting info", err0)
	case err1 != io.EOF:
		t.Error("Error while extracting info", err1)
	case err1 == nil:
		t.Error("Summary iterator should return io.EOF", err1)
	case errt != nil:
		t.Error("Error while loading summary test info", errt)
	case !reflect.DeepEqual(s, st):
		t.Error("Error different summaries")
	}
}

var holyGrailSummary = `{"Title":"Holy Grail","PageID":14322,"Revisions":[{"ID":258108,"UserID":9161885,"Weight":125,"SHA1":"kfkd76clis9zdl9j77wk1t11i7fv4qs","Timestamp":"2001-12-22T04:58:20Z"},{"ID":31436,"UserID":0,"Weight":246,"SHA1":"fn2psojyu2xrziv4txef3uxdagmzgbw","Timestamp":"2002-02-25T15:51:15Z"},{"ID":69510,"UserID":63,"Weight":251,"SHA1":"pqzxm21coospj4wp74wokhrmgu7esht","Timestamp":"2002-03-16T22:29:56Z"},{"ID":69587,"UserID":0,"Weight":363,"SHA1":"lbeqr0fvfg3kzbu0zhqif97jron5rzm","Timestamp":"2002-05-11T09:52:16Z"},{"ID":228446,"UserID":0,"Weight":363,"SHA1":"960tt2pzr8vlrclesuhrwzt2auv483v","Timestamp":"2002-05-11T13:40:30Z"},{"ID":640730,"UserID":1300,"Weight":673,"SHA1":"1sf632mva7u5izlaaw79q83bgyupc82","Timestamp":"2002-09-19T07:06:18Z"},{"ID":647871,"UserID":7764,"Weight":802,"SHA1":"o56hxgr6ztet94h7t4hcku5ycjnfyb1","Timestamp":"2003-02-03T19:13:23Z"},{"ID":911569,"UserID":7104,"Weight":826,"SHA1":"3ts8o85vif99qxws9ugtg5fr8nq2p0y","Timestamp":"2003-02-07T02:06:40Z"},{"ID":911578,"UserID":8780,"Weight":867,"SHA1":"tbdawkf5uaghbhgidqo46q7lfdqmayd","Timestamp":"2003-05-12T04:32:45Z"},{"ID":995461,"UserID":8780,"Weight":965,"SHA1":"bblvz4e2mrobc9f5mq25n7827balrig","Timestamp":"2003-05-12T04:35:55Z"},{"ID":1064382,"UserID":0,"Weight":1048,"SHA1":"01mpvdia92yg5nrz0xepxwhb5ajuzqg","Timestamp":"2003-06-04T03:17:23Z"},{"ID":1064397,"UserID":7513,"Weight":1244,"SHA1":"gdv8ka7x90ekwr9ia081queo9yk5h19","Timestamp":"2003-06-20T17:04:23Z"},{"ID":1128146,"UserID":7513,"Weight":1575,"SHA1":"jljwny1vys91vhlo5zq33a5z5xz0h0a","Timestamp":"2003-06-20T17:10:29Z"},{"ID":1128225,"UserID":10888,"Weight":1876,"SHA1":"0drbqlk22gtfpo8u7b855uj8w84qlj0","Timestamp":"2003-07-09T04:33:24Z"},{"ID":1205942,"UserID":7104,"Weight":1904,"SHA1":"6y2296wbuinm7y4x48e9slwodm1k0rm","Timestamp":"2003-07-09T05:05:35Z"},{"ID":1215056,"UserID":9385,"Weight":2424,"SHA1":"fe0jqmue1ph3q2p577eqd1qpmj6ddpv","Timestamp":"2003-07-27T23:30:25Z"},{"ID":1270041,"UserID":7513,"Weight":2464,"SHA1":"c5pz2a0tjhlq2gqc72glafv7dt1xu8x","Timestamp":"2003-07-29T20:27:36Z"},{"ID":1378237,"UserID":0,"Weight":2486,"SHA1":"bj7uadby4p0nfxmdqff5sfrgngdfnh2","Timestamp":"2003-08-10T18:30:38Z"},{"ID":1436337,"UserID":7041,"Weight":2508,"SHA1":"ptms6cc494g3t5nhzhh2ugpc2t3xz0w","Timestamp":"2003-09-01T20:08:18Z"},{"ID":1436342,"UserID":0,"Weight":2529,"SHA1":"nisd1bwxl6ly7izyysdgibrm7stogto","Timestamp":"2003-09-15T10:36:01Z"},{"ID":1444696,"UserID":0,"Weight":2529,"SHA1":"arhr1aa011c3w06fgtdetbf05qni7r8","Timestamp":"2003-09-15T10:37:06Z"},{"ID":1629060,"UserID":0,"Weight":2602,"SHA1":"8vf1ive81x1bd13m3cm25jdhtq4sk6t","Timestamp":"2003-09-17T15:36:48Z"},{"ID":1662920,"UserID":3552,"Weight":2925,"SHA1":"q7xmzuh2e6y7pz10uuuyvqdunwz320s","Timestamp":"2003-10-26T15:21:07Z"},{"ID":1663049,"UserID":9232,"Weight":2951,"SHA1":"cbzppko4ff47us0ajtibeeshoyk45zx","Timestamp":"2003-11-02T11:44:10Z"},{"ID":1826215,"UserID":9232,"Weight":2950,"SHA1":"akyzec3404uwzggn4xlpwdbilhqooas","Timestamp":"2003-11-02T12:41:52Z"},{"ID":1974528,"UserID":31457,"Weight":2974,"SHA1":"jshjzcpn9n4fm37fty374omodmt8gi8","Timestamp":"2003-11-27T12:35:22Z"},{"ID":1974537,"UserID":3397,"Weight":2987,"SHA1":"dl3jk8pukzer90t8x9zgz5qahfxmr2h","Timestamp":"2003-12-16T13:14:04Z"},{"ID":2527580,"UserID":3397,"Weight":3000,"SHA1":"i8rb7jlpemu9qd5azi9f2e261i15vl6","Timestamp":"2003-12-16T13:15:37Z"},{"ID":2530676,"UserID":25261,"Weight":2991,"SHA1":"t3s61tlhyarrp577phmy1cwk594faxm","Timestamp":"2004-02-25T18:21:18Z"},{"ID":2558076,"UserID":29210,"Weight":3061,"SHA1":"af6f7dtxmbwfomfuqxn8s0pkwhjkbog","Timestamp":"2004-02-25T22:45:37Z"},{"ID":2594548,"UserID":5894,"Weight":3151,"SHA1":"67e7qxbjarstzym8c7eq7ju9d70qizd","Timestamp":"2004-02-28T08:51:05Z"},{"ID":2780126,"UserID":7104,"Weight":3061,"SHA1":"af6f7dtxmbwfomfuqxn8s0pkwhjkbog","Timestamp":"2004-03-02T07:27:46Z"},{"ID":2781221,"UserID":11077,"Weight":3218,"SHA1":"3b52aw109kcvfvonv5d1muj4fukgnw6","Timestamp":"2004-03-15T19:49:49Z"},{"ID":2788879,"UserID":21492,"Weight":5624,"SHA1":"mzpv8o5z799bfdjzmuo97zgnyuuo542","Timestamp":"2004-03-15T21:16:17Z"},{"ID":2794581,"UserID":0,"Weight":6611,"SHA1":"b1ci3sikd9obviqrlm0re9ezcfb8xau","Timestamp":"2004-03-16T09:19:01Z"},{"ID":2815432,"UserID":0,"Weight":6611,"SHA1":"frebzgt29995gx598vi1v5nhz0g4q1h","Timestamp":"2004-03-16T20:15:13Z"},{"ID":2957945,"UserID":7104,"Weight":6609,"SHA1":"blpic2prx3gonhxbk0ghs45fmvt5q3b","Timestamp":"2004-03-18T08:16:21Z"},{"ID":2958185,"UserID":0,"Weight":6614,"SHA1":"cdzos4eblr3qbvg5ddcmrlrbivxlzd2","Timestamp":"2004-03-28T20:25:08Z"},{"ID":2960859,"UserID":21492,"Weight":5629,"SHA1":"g41bjofb0i57yizxiqkhqxee5asg84s","Timestamp":"2004-03-28T20:49:59Z"},{"ID":2962528,"UserID":9385,"Weight":5882,"SHA1":"qh3jskswhvql21dssimzwvrh6rxd0bw","Timestamp":"2004-03-29T00:48:43Z"},{"ID":2963459,"UserID":21492,"Weight":7283,"SHA1":"pnyq7xcry5auvh6znmrdm7s10grzq8k","Timestamp":"2004-03-29T03:38:47Z"},{"ID":2963468,"UserID":66,"Weight":7287,"SHA1":"lyf1tr6nka5hfeybnomenz8ned79tax","Timestamp":"2004-03-29T05:14:15Z"},{"ID":3048728,"UserID":66,"Weight":7274,"SHA1":"pf9qq2baqbp99du2p7nqfwe4lyofnd6","Timestamp":"2004-03-29T05:15:22Z"},{"ID":3054944,"UserID":0,"Weight":7404,"SHA1":"lecu9nxlb149335f7g7zff3b3x0vmbk","Timestamp":"2004-04-04T04:49:46Z"},{"ID":3054956,"UserID":0,"Weight":7017,"SHA1":"kb0g6rwxfcqpr59w4g0qe710n3cxbv2","Timestamp":"2004-04-04T17:03:20Z"},{"ID":3077185,"UserID":0,"Weight":7015,"SHA1":"67rgpsfl6i4m5hu7q0zu0hgstw0k2lf","Timestamp":"2004-04-04T17:03:55Z"},{"ID":3084559,"UserID":52297,"Weight":7016,"SHA1":"edi2mup0v2so12qpwjufd2o6l0uzesj","Timestamp":"2004-04-06T02:25:07Z"},{"ID":3172791,"UserID":35314,"Weight":7078,"SHA1":"hfrefh5g8v23gwfhtlefxptakh3dr3f","Timestamp":"2004-04-06T16:51:51Z"},{"ID":3172888,"UserID":0,"Weight":7086,"SHA1":"4mbpxbyctvifgukniwzzk2nofty5r8w","Timestamp":"2004-04-13T13:45:07Z"},{"ID":3464603,"UserID":0,"Weight":7140,"SHA1":"ou7bbr3zl2k2fxfae8fbdb0hd2uyl54","Timestamp":"2004-04-13T13:56:30Z"},{"ID":3464674,"UserID":0,"Weight":7470,"SHA1":"evw5smwp2q7vjxnl5ix0crtax8w1qu7","Timestamp":"2004-05-05T21:57:15Z"},{"ID":3464810,"UserID":0,"Weight":7428,"SHA1":"tovn5g0ui74ewum4cflhmy0k13vugo7","Timestamp":"2004-05-05T22:03:34Z"},{"ID":3464824,"UserID":58926,"Weight":7433,"SHA1":"52f2g530sn8l06u9m7lv47089psat01","Timestamp":"2004-05-05T22:13:00Z"},{"ID":3464831,"UserID":58926,"Weight":7422,"SHA1":"3od6upv29838yz6pkuw29blv9202j91","Timestamp":"2004-05-05T22:14:11Z"},{"ID":3470479,"UserID":58926,"Weight":7430,"SHA1":"4kuip5avo7z3v8alx2baw0nrym2ejpl","Timestamp":"2004-05-05T22:14:38Z"},{"ID":3503725,"UserID":3464,"Weight":7433,"SHA1":"rmm1uxhtmo00dm22zvuphdyv3oxf9qz","Timestamp":"2004-05-06T09:51:19Z"},{"ID":3576340,"UserID":0,"Weight":7438,"SHA1":"2bjxl5vh47rsd6lu9gqwmdgbmqf4ugz","Timestamp":"2004-05-08T23:12:39Z"},{"ID":3662858,"UserID":7513,"Weight":7725,"SHA1":"iomi8aavejp0wd27i0458emoujg4b07","Timestamp":"2004-05-14T14:05:41Z"},{"ID":3765745,"UserID":58926,"Weight":7725,"SHA1":"7w2d537phqxpwydt2zmawctf42rgyil","Timestamp":"2004-05-20T19:57:56Z"},{"ID":3853233,"UserID":66503,"Weight":7894,"SHA1":"pfvuxy8mjh0q4wq79hg91nz3c5jfpry","Timestamp":"2004-05-28T22:40:28Z"},{"ID":4064386,"UserID":7513,"Weight":7926,"SHA1":"cnkmfry57nmiz8nhcnpjj6quopwb3wb","Timestamp":"2004-06-03T03:40:32Z"},{"ID":4064858,"UserID":66503,"Weight":7930,"SHA1":"pu3tw2bbpqamvak14hay6i5881vkmlw","Timestamp":"2004-06-13T04:01:17Z"},{"ID":4064867,"UserID":29678,"Weight":7896,"SHA1":"8w3m2qevbcsh422sactv226qx8krv0d","Timestamp":"2004-06-13T04:43:42Z"},{"ID":4176927,"UserID":29678,"Weight":7891,"SHA1":"elg4glbktscymytyaf5n6lcu14nvmsr","Timestamp":"2004-06-13T04:44:28Z"},{"ID":4178399,"UserID":18610,"Weight":7912,"SHA1":"8vk1gpyn6mgxyz8isfxqhsuu3jay0p8","Timestamp":"2004-06-20T04:52:51Z"},{"ID":4183030,"UserID":17456,"Weight":7946,"SHA1":"l7gtf1k92r0llh4hxiah0wxy342wgxz","Timestamp":"2004-06-20T06:31:24Z"},{"ID":4184443,"UserID":35821,"Weight":7955,"SHA1":"64ua1xt03s5y43fdn5ppn17io2z1gyg","Timestamp":"2004-06-20T14:27:16Z"},{"ID":4185089,"UserID":21492,"Weight":7969,"SHA1":"foppdogqnq4ezwd4uh699p77c1tefi6","Timestamp":"2004-06-20T16:16:22Z"},{"ID":4193168,"UserID":21492,"Weight":11361,"SHA1":"4fdoak6oi5yvka7s3vqnwfmnzyq0q84","Timestamp":"2004-06-20T16:59:02Z"},{"ID":4547890,"UserID":9385,"Weight":11425,"SHA1":"nigjyh7vjyuo0a3nglxg715devbjex0","Timestamp":"2004-06-21T01:34:51Z"},{"ID":4569978,"UserID":0,"Weight":11424,"SHA1":"qiixw5dekvemnb2x968fn0xf5nyv2gx","Timestamp":"2004-07-10T20:59:25Z"},{"ID":4571958,"UserID":29678,"Weight":11304,"SHA1":"kxgwimmm7592o83zpxbtvhsosku5ucw","Timestamp":"2004-07-12T00:00:36Z"},{"ID":4753028,"UserID":29678,"Weight":11299,"SHA1":"fl0u55z2tyq5dlxly0sf27omwdzvabc","Timestamp":"2004-07-12T01:56:39Z"},{"ID":4926273,"UserID":85051,"Weight":11302,"SHA1":"i2oj02ftyx3io9abq5lpf3vuqu9ov1u","Timestamp":"2004-07-20T21:20:51Z"},{"ID":5002103,"UserID":0,"Weight":11306,"SHA1":"9cfh5axmar53v0j3c4kltxq1clgc0d4","Timestamp":"2004-07-31T01:18:35Z"},{"ID":5452184,"UserID":82928,"Weight":11310,"SHA1":"3jsx1d5khqm4nqovlgehai969ny1l03","Timestamp":"2004-08-04T19:34:42Z"},{"ID":5703156,"UserID":0,"Weight":11568,"SHA1":"ssju6a97c9kz366jj7rrpdtg90ghvvx","Timestamp":"2004-08-26T08:47:08Z"},{"ID":5703175,"UserID":0,"Weight":11552,"SHA1":"9uonwm0if612n93499hlr7al2hfw4zh","Timestamp":"2004-09-06T22:20:12Z"},{"ID":5705294,"UserID":0,"Weight":11568,"SHA1":"ssju6a97c9kz366jj7rrpdtg90ghvvx","Timestamp":"2004-09-06T22:20:53Z"},{"ID":5711532,"UserID":21492,"Weight":11882,"SHA1":"d1onasik6cb4hyotgd26gdj7fvvaazw","Timestamp":"2004-09-07T00:07:22Z"},{"ID":5718239,"UserID":82928,"Weight":11870,"SHA1":"irxxv8no5u0uqyipoiov6epgemvcdui","Timestamp":"2004-09-07T05:25:57Z"},{"ID":5760405,"UserID":7513,"Weight":11874,"SHA1":"kufnfwpn1jwjpfd2ryfr4dojpnpj1nc","Timestamp":"2004-09-07T14:02:05Z"},{"ID":5878814,"UserID":102802,"Weight":11883,"SHA1":"7utli46lag4iifqgmejzi3s5rmhkyec","Timestamp":"2004-09-09T11:36:42Z"},{"ID":5890830,"UserID":96604,"Weight":11903,"SHA1":"l7s8uwc64636uwatnncmbxp0t88p7dr","Timestamp":"2004-09-14T15:11:32Z"},{"ID":6087015,"UserID":0,"Weight":11904,"SHA1":"f8owj4dy77nehqiilg3qjjdu76l4cke","Timestamp":"2004-09-15T00:42:22Z"},{"ID":6166408,"UserID":64439,"Weight":11935,"SHA1":"9lnrsr7u9gjpb08qude6ldd2whwsjzd","Timestamp":"2004-09-23T03:07:48Z"},{"ID":6363392,"UserID":99584,"Weight":11945,"SHA1":"645d97pfy0duee22hlx9b4jgv7gawjj","Timestamp":"2004-09-26T16:13:54Z"},{"ID":6440164,"UserID":25261,"Weight":11958,"SHA1":"6rku2mq0tam081blcbcde1f58dwr5kr","Timestamp":"2004-10-05T20:24:00Z"},{"ID":6678523,"UserID":7402,"Weight":11964,"SHA1":"2i8dxaywvzfgu915tmfnv15xxhn2e60","Timestamp":"2004-10-09T00:38:35Z"},{"ID":6723547,"UserID":0,"Weight":12128,"SHA1":"6v4qyusw32t0wwi0skestukyqrdwnq3","Timestamp":"2004-10-18T18:07:36Z"},{"ID":6815115,"UserID":106508,"Weight":12174,"SHA1":"4bh8coqo3qyll192d0rxowh7p8tmlt5","Timestamp":"2004-10-20T07:52:54Z"},{"ID":6817942,"UserID":68411,"Weight":12165,"SHA1":"qg92iquiinvu1jmf9ihjxtbi85f3yu9","Timestamp":"2004-10-24T03:25:29Z"},{"ID":7338524,"UserID":0,"Weight":12166,"SHA1":"7kpqr6wj72gxsmjn5hhl6ue6ymj43nt","Timestamp":"2004-10-24T06:20:35Z"},{"ID":7338585,"UserID":94120,"Weight":12167,"SHA1":"sj6eiz96ib2e6un1ct911yscda7r713","Timestamp":"2004-11-11T13:56:39Z"},{"ID":7394034,"UserID":94120,"Weight":12223,"SHA1":"15ynbu7waqjqxhijsjue3uj8syzxze3","Timestamp":"2004-11-11T13:59:11Z"},{"ID":7394195,"UserID":0,"Weight":12237,"SHA1":"0tm4r78efvd5wxvihcxlhxb2zgh8ft6","Timestamp":"2004-11-12T21:39:20Z"},{"ID":7563092,"UserID":132007,"Weight":12223,"SHA1":"15ynbu7waqjqxhijsjue3uj8syzxze3","Timestamp":"2004-11-12T21:43:01Z"},{"ID":7563162,"UserID":0,"Weight":12345,"SHA1":"4w3u8xvh63ws7fikygpzmquv24krnn3","Timestamp":"2004-11-17T00:55:31Z"},{"ID":7563226,"UserID":0,"Weight":17235,"SHA1":"q395ejvoxefcvvgs783jkqnsrn5556n","Timestamp":"2004-11-17T00:58:08Z"},{"ID":7563456,"UserID":28559,"Weight":12345,"SHA1":"4w3u8xvh63ws7fikygpzmquv24krnn3","Timestamp":"2004-11-17T01:00:26Z"},{"ID":7563575,"UserID":0,"Weight":12977,"SHA1":"tumvnm8z1zts8yylvh4oq2wq3nfs1bv","Timestamp":"2004-11-17T01:07:33Z"},{"ID":7563647,"UserID":55722,"Weight":12345,"SHA1":"4w3u8xvh63ws7fikygpzmquv24krnn3","Timestamp":"2004-11-17T01:11:33Z"},{"ID":7835807,"UserID":29678,"Weight":12223,"SHA1":"15ynbu7waqjqxhijsjue3uj8syzxze3","Timestamp":"2004-11-17T01:14:34Z"},{"ID":7976752,"UserID":116385,"Weight":12237,"SHA1":"gas7s02wrgi45nof6hikuig25nrsm1c","Timestamp":"2004-11-25T04:04:42Z"},{"ID":7976785,"UserID":0,"Weight":12037,"SHA1":"sjvwxxasqnk76saifs090yfe52o6uj3","Timestamp":"2004-11-30T04:21:43Z"},{"ID":8179120,"UserID":0,"Weight":12035,"SHA1":"3h4j4rd699lyir8t2s8672ivd8796ji","Timestamp":"2004-11-30T04:22:57Z"},{"ID":8198913,"UserID":0,"Weight":12492,"SHA1":"4fyk7k7u9powebanmkdkjmkpqoygxq1","Timestamp":"2004-12-06T12:07:04Z"},{"ID":8232232,"UserID":85879,"Weight":12515,"SHA1":"mcgpxeoqrgnt6aaf7guyxckfq9xlb7h","Timestamp":"2004-12-07T02:29:48Z"},{"ID":8298268,"UserID":21492,"Weight":12493,"SHA1":"9qel1oh1b3ytz9eoouisu0f484zav08","Timestamp":"2004-12-08T07:25:59Z"},{"ID":8305695,"UserID":0,"Weight":11917,"SHA1":"tczdl2gou5rjasy1ku23hxa1f3966ox","Timestamp":"2004-12-10T13:59:35Z"},{"ID":8357848,"UserID":85879,"Weight":12493,"SHA1":"9qel1oh1b3ytz9eoouisu0f484zav08","Timestamp":"2004-12-10T19:42:03Z"},{"ID":8371072,"UserID":112889,"Weight":12480,"SHA1":"ayy5uagxzutitymzq21ge3vk30w348o","Timestamp":"2004-12-12T07:06:07Z"},{"ID":8377279,"UserID":0,"Weight":12483,"SHA1":"f8ghj7xwmgk3sbq05s256ler8hheuji","Timestamp":"2004-12-12T20:54:27Z"},{"ID":8390281,"UserID":85879,"Weight":12157,"SHA1":"hw58nh1egy0rstjezeyrk06r5mqglni","Timestamp":"2004-12-13T00:09:56Z"},{"ID":8488859,"UserID":85879,"Weight":12117,"SHA1":"9dypvllxi03m0xi3oyuuad6k36i85fn","Timestamp":"2004-12-13T09:00:30Z"},{"ID":8501719,"UserID":129176,"Weight":12117,"SHA1":"4wzbxnmdale90qx4ulxqslo4hxhtez0","Timestamp":"2004-12-16T14:39:00Z"},{"ID":8958989,"UserID":9475,"Weight":12130,"SHA1":"eeiwlvxpzhrvbfdic2j1tzq2ix4qpo2","Timestamp":"2004-12-16T23:06:46Z"},{"ID":9134632,"UserID":0,"Weight":12126,"SHA1":"kh8tnhjk7aikqtk6ohq6jwuxk47nv4b","Timestamp":"2004-12-30T22:07:55Z"},{"ID":9134641,"UserID":141159,"Weight":12328,"SHA1":"7jan78j9b50lf6dwcpgloj2jxpuqujj","Timestamp":"2005-01-05T23:12:49Z"},{"ID":9134684,"UserID":141159,"Weight":12337,"SHA1":"g5c5fjerc4ye54z3thcjm9vtg55jb26","Timestamp":"2005-01-05T23:13:16Z"},{"ID":9135643,"UserID":141159,"Weight":12337,"SHA1":"oh0pft3h0vd3ke5siktp8t96lgt49cg","Timestamp":"2005-01-05T23:14:14Z"},{"ID":9147618,"UserID":21492,"Weight":12753,"SHA1":"3lxf506hv2w3olf84fmhm4l4zcotuar","Timestamp":"2005-01-05T23:51:41Z"},{"ID":9236713,"UserID":21492,"Weight":12436,"SHA1":"p8pcghzn7ybuyqfch4d9yzw068vy3nf","Timestamp":"2005-01-06T11:09:17Z"},{"ID":9244451,"UserID":5094,"Weight":12723,"SHA1":"bwfhkxw6vgyq4phykr39lbmd96dhfyd","Timestamp":"2005-01-09T20:59:19Z"},{"ID":9347882,"UserID":0,"Weight":12742,"SHA1":"2vmh4ya5m4s7oqftw93epkbnbho3w1q","Timestamp":"2005-01-10T02:40:43Z"},{"ID":9353044,"UserID":0,"Weight":12738,"SHA1":"hwpy26ms1zs8ocoxtcg6rd18u9j2d5b","Timestamp":"2005-01-14T02:29:00Z"},{"ID":9387280,"UserID":21492,"Weight":12742,"SHA1":"2vmh4ya5m4s7oqftw93epkbnbho3w1q","Timestamp":"2005-01-14T06:01:32Z"},{"ID":9387846,"UserID":84141,"Weight":12622,"SHA1":"t6hakcpvcdl90ua593rf2udc7vtlbh2","Timestamp":"2005-01-15T18:50:58Z"},{"ID":9388114,"UserID":162241,"Weight":12620,"SHA1":"0e945bksvrmbqlgcb1psxj3ad41jsu8","Timestamp":"2005-01-15T19:11:21Z"},{"ID":9413427,"UserID":162241,"Weight":12669,"SHA1":"8mdb06gcpsb8k0886i9v4cr318fuh01","Timestamp":"2005-01-15T19:23:26Z"},{"ID":9471031,"UserID":0,"Weight":13278,"SHA1":"dvq4cpnt445d87fxnws97eew8gh4d7n","Timestamp":"2005-01-16T19:17:37Z"},{"ID":9471082,"UserID":0,"Weight":12608,"SHA1":"78o3pb8zvf8jlrd9nth71l41fmx6lbg","Timestamp":"2005-01-19T01:02:00Z"},{"ID":9597161,"UserID":90651,"Weight":13278,"SHA1":"dvq4cpnt445d87fxnws97eew8gh4d7n","Timestamp":"2005-01-19T01:03:49Z"},{"ID":9614311,"UserID":40082,"Weight":13295,"SHA1":"jbgkfswpbvij61j7x9986qdisvt477d","Timestamp":"2005-01-23T23:50:57Z"},{"ID":9691423,"UserID":3464,"Weight":13314,"SHA1":"3nw4wjs8izgo0u0wazwflufsklpj1bj","Timestamp":"2005-01-24T13:30:29Z"},{"ID":9784652,"UserID":0,"Weight":13350,"SHA1":"dg5xcz9q8wixrribdnfhh0twetd5jsy","Timestamp":"2005-01-27T02:19:33Z"},{"ID":9785264,"UserID":13008,"Weight":13354,"SHA1":"86ktx3wvaoi52vz72y9k4vu3m46o7y2","Timestamp":"2005-01-30T04:33:13Z"},{"ID":9785282,"UserID":0,"Weight":13145,"SHA1":"gdibilimd3dyubm0wsuz3hzi8640ytg","Timestamp":"2005-01-30T05:04:12Z"},{"ID":9795616,"UserID":22631,"Weight":13354,"SHA1":"86ktx3wvaoi52vz72y9k4vu3m46o7y2","Timestamp":"2005-01-30T05:05:12Z"},{"ID":9801534,"UserID":90640,"Weight":13353,"SHA1":"42pvkqbl1dqzx5g6bcxhr8yytehk2yc","Timestamp":"2005-01-30T15:12:28Z"},{"ID":9948311,"UserID":44727,"Weight":13354,"SHA1":"86ktx3wvaoi52vz72y9k4vu3m46o7y2","Timestamp":"2005-01-30T19:46:36Z"},{"ID":9948327,"UserID":0,"Weight":13375,"SHA1":"cbuhc74pl1vjbeetqcx4f826x77yigp","Timestamp":"2005-02-04T21:39:18Z"},{"ID":9948482,"UserID":0,"Weight":13390,"SHA1":"fr7fcl1w9sno1m3jmj35zk3lreboq2v","Timestamp":"2005-02-04T21:39:47Z"},{"ID":10011471,"UserID":29678,"Weight":13354,"SHA1":"86ktx3wvaoi52vz72y9k4vu3m46o7y2","Timestamp":"2005-02-04T21:46:11Z"},{"ID":10011532,"UserID":141159,"Weight":15192,"SHA1":"mhaiil8t3c43qvrkrjjzyspzn5jre55","Timestamp":"2005-02-06T22:23:05Z"},{"ID":10013318,"UserID":141159,"Weight":15190,"SHA1":"8t72xlvicmzwhpv4dm2r6v2ut4wxwlm","Timestamp":"2005-02-06T22:25:29Z"},{"ID":10013396,"UserID":0,"Weight":15251,"SHA1":"84jxsmxrvpgo2xujps3yk7ihiebj76s","Timestamp":"2005-02-06T23:34:36Z"},{"ID":10013437,"UserID":0,"Weight":15252,"SHA1":"t8anpa1t9ojqjqaicmuc0slssxmyz0g","Timestamp":"2005-02-06T23:37:12Z"},{"ID":10013461,"UserID":0,"Weight":15252,"SHA1":"0ynsk1sjep5nnuutkgzp7n7jj0xjrg9","Timestamp":"2005-02-06T23:38:55Z"},{"ID":10014489,"UserID":0,"Weight":15252,"SHA1":"je63smjmu8m8u0fhyc0asve7v6x905f","Timestamp":"2005-02-06T23:39:44Z"},{"ID":10034450,"UserID":21492,"Weight":15190,"SHA1":"8t72xlvicmzwhpv4dm2r6v2ut4wxwlm","Timestamp":"2005-02-07T00:02:05Z"},{"ID":10182511,"UserID":107440,"Weight":15276,"SHA1":"j6rvly4ra8pbeph1mvu3wah51yb5y4y","Timestamp":"2005-02-07T15:49:55Z"},{"ID":10182655,"UserID":190229,"Weight":17201,"SHA1":"mit6zoftl73z8f81ql0ea5ztihjrim2","Timestamp":"2005-02-12T04:11:46Z"},{"ID":10298492,"UserID":29678,"Weight":15276,"SHA1":"j6rvly4ra8pbeph1mvu3wah51yb5y4y","Timestamp":"2005-02-12T04:19:04Z"}]}`

const holyGrail = "<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.10/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.10/ http://www.mediawiki.org/xml/export-0.10.xsd" version="0.10" xml:lang="en">
  <siteinfo>
    <sitename>Wikipedia</sitename>
    <dbname>enwiki</dbname>
    <base>https://en.wikipedia.org/wiki/Main_Page</base>
    <generator>MediaWiki 1.31.0-wmf.30</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Media</namespace>
      <namespace key="-1" case="first-letter">Special</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Talk</namespace>
      <namespace key="2" case="first-letter">User</namespace>
      <namespace key="3" case="first-letter">User talk</namespace>
      <namespace key="4" case="first-letter">Wikipedia</namespace>
      <namespace key="5" case="first-letter">Wikipedia talk</namespace>
      <namespace key="6" case="first-letter">File</namespace>
      <namespace key="7" case="first-letter">File talk</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki talk</namespace>
      <namespace key="10" case="first-letter">Template</namespace>
      <namespace key="11" case="first-letter">Template talk</namespace>
      <namespace key="12" case="first-letter">Help</namespace>
      <namespace key="13" case="first-letter">Help talk</namespace>
      <namespace key="14" case="first-letter">Category</namespace>
      <namespace key="15" case="first-letter">Category talk</namespace>
      <namespace key="100" case="first-letter">Portal</namespace>
      <namespace key="101" case="first-letter">Portal talk</namespace>
      <namespace key="108" case="first-letter">Book</namespace>
      <namespace key="109" case="first-letter">Book talk</namespace>
      <namespace key="118" case="first-letter">Draft</namespace>
      <namespace key="119" case="first-letter">Draft talk</namespace>
      <namespace key="446" case="first-letter">Education Program</namespace>
      <namespace key="447" case="first-letter">Education Program talk</namespace>
      <namespace key="710" case="first-letter">TimedText</namespace>
      <namespace key="711" case="first-letter">TimedText talk</namespace>
      <namespace key="828" case="first-letter">Module</namespace>
      <namespace key="829" case="first-letter">Module talk</namespace>
      <namespace key="2300" case="first-letter">Gadget</namespace>
      <namespace key="2301" case="first-letter">Gadget talk</namespace>
      <namespace key="2302" case="case-sensitive">Gadget definition</namespace>
      <namespace key="2303" case="case-sensitive">Gadget definition talk</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Holy Grail</title>
    <ns>0</ns>
    <id>14322</id>
    <revision>
      <id>258108</id>
      <timestamp>2001-12-22T04:58:20Z</timestamp>
      <contributor>
        <username>KireiShojo</username>
        <id>9161885</id>
      </contributor>
      <comment>*</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="126">the Holy Grail is said to be the cup Jesus drank from at the last supper. It was said to have the power to heal all wounds.

</text>
      <sha1>kfkd76clis9zdl9j77wk1t11i7fv4qs</sha1>
    </revision>
    <revision>
      <id>31436</id>
      <parentid>258108</parentid>
      <timestamp>2002-02-25T15:51:15Z</timestamp>
      <contributor>
        <username>Conversion script</username>
        <id>0</id>
      </contributor>
      <minor/>
      <comment>Automated conversion</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="247">The Holy Grail is said to be the cup [[Jesus Christ|Jesus]] drank from at the [[Last Supper]]. It was said to have the power to heal all wounds. Much of the christianised [[King Arthur|Arthurian]] mythos relates for the quest for the Holy Grail.
</text>
      <sha1>fn2psojyu2xrziv4txef3uxdagmzgbw</sha1>
    </revision>
    <revision>
      <id>69510</id>
      <parentid>31436</parentid>
      <timestamp>2002-03-16T22:29:56Z</timestamp>
      <contributor>
        <username>Wesley</username>
        <id>63</id>
      </contributor>
      <minor/>
      <comment>*</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="252">The '''Holy Grail''' is said to be the cup [[Jesus Christ|Jesus]] drank from at the [[Last Supper]]. It was said to have the power to heal all wounds. Much of the christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.
</text>
      <sha1>pqzxm21coospj4wp74wokhrmgu7esht</sha1>
    </revision>
    <revision>
      <id>69587</id>
      <parentid>69510</parentid>
      <timestamp>2002-05-11T09:52:16Z</timestamp>
      <contributor>
        <ip>62.60.45.76</ip>
      </contributor>
      <comment>*</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="364">The '''Holy Grail''' is said to be the cup [[Jesus Christ|Jesus]] drank from at the [[Last Supper]]. It was said to have the power to heal all wounds. Much of the christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail. The legend may have started off with a Holy Cauldron which merged with [[Christian]] beliefs, becaming a Grail.
</text>
      <sha1>lbeqr0fvfg3kzbu0zhqif97jron5rzm</sha1>
    </revision>
    <revision>
      <id>228446</id>
      <parentid>69587</parentid>
      <timestamp>2002-05-11T13:40:30Z</timestamp>
      <contributor>
        <ip>62.60.73.164</ip>
      </contributor>
      <comment>*</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="364">The '''Holy Grail''' is said to be the cup [[Jesus Christ|Jesus]] drank from at the [[Last Supper]]. It was said to have the power to heal all wounds. Much of the christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail. The legend may have started off with a Holy Cauldron which merged with [[Christian]] beliefs, becoming a Grail.
</text>
      <sha1>960tt2pzr8vlrclesuhrwzt2auv483v</sha1>
    </revision>
    <revision>
      <id>640730</id>
      <parentid>228446</parentid>
      <timestamp>2002-09-19T07:06:18Z</timestamp>
      <contributor>
        <username>Karen Johnson</username>
        <id>1300</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="675">The '''Holy Grail''' is said to be the cup [[Jesus Christ|Jesus]] drank from at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross. It was said to have the power to heal all wounds. Much of the christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail. The legend may have started off with a Holy Cauldron which merged with [[Christian]] beliefs, becoming a Grail.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.</text>
      <sha1>1sf632mva7u5izlaaw79q83bgyupc82</sha1>
    </revision>
    <revision>
      <id>647871</id>
      <parentid>640730</parentid>
      <timestamp>2003-02-03T19:13:23Z</timestamp>
      <contributor>
        <username>Duke~enwiki</username>
        <id>7764</id>
      </contributor>
      <comment>film treatments</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="806">The '''Holy Grail''' is said to be the cup [[Jesus Christ|Jesus]] drank from at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross. It was said to have the power to heal all wounds. Much of the christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail. The legend may have started off with a Holy Cauldron which merged with [[Christian]] beliefs, becoming a Grail.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

The [[film]]s ''[[The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' imagine 20th-century quests for the Grail.</text>
      <sha1>o56hxgr6ztet94h7t4hcku5ycjnfyb1</sha1>
    </revision>
    <revision>
      <id>911569</id>
      <parentid>647871</parentid>
      <timestamp>2003-02-07T02:06:40Z</timestamp>
      <contributor>
        <username>Paul A</username>
        <id>7104</id>
      </contributor>
      <minor/>
      <comment>correct link: The Fisher King (movie)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="830">The '''Holy Grail''' is said to be the cup [[Jesus Christ|Jesus]] drank from at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross. It was said to have the power to heal all wounds. Much of the christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail. The legend may have started off with a Holy Cauldron which merged with [[Christian]] beliefs, becoming a Grail.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

The [[film]]s ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' imagine 20th-century quests for the Grail.</text>
      <sha1>3ts8o85vif99qxws9ugtg5fr8nq2p0y</sha1>
    </revision>
    <revision>
      <id>911578</id>
      <parentid>911569</parentid>
      <timestamp>2003-05-12T04:32:45Z</timestamp>
      <contributor>
        <username>Kingturtle</username>
        <id>8780</id>
      </contributor>
      <comment>Monty Python and the Holy Grail</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="871">The '''Holy Grail''' is said to be the cup [[Jesus Christ|Jesus]] drank from at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross. It was said to have the power to heal all wounds. Much of the christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail. The legend may have started off with a Holy Cauldron which merged with [[Christian]] beliefs, becoming a Grail.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

The [[film]]s ''[[Monty Python and the Holy Grail]]'', ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' imagine 20th-century quests for the Grail.</text>
      <sha1>tbdawkf5uaghbhgidqo46q7lfdqmayd</sha1>
    </revision>
    <revision>
      <id>995461</id>
      <parentid>911578</parentid>
      <timestamp>2003-05-12T04:35:55Z</timestamp>
      <contributor>
        <username>Kingturtle</username>
        <id>8780</id>
      </contributor>
      <minor/>
      <comment>excalibur</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="971">The '''Holy Grail''' is said to be the cup [[Jesus Christ|Jesus]] drank from at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross. It was said to have the power to heal all wounds. Much of the christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail. The legend may have started off with a Holy Cauldron which merged with [[Christian]] beliefs, becoming a Grail.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

The [[film]]s ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' imagine 20th-century quests for the Grail.

Other films that involve the quest for the Grail include ''[[Excalibur (movie)|Excalibur]]'' and ''[[Monty Python and the Holy Grail]]''.</text>
      <sha1>bblvz4e2mrobc9f5mq25n7827balrig</sha1>
    </revision>
    <revision>
      <id>1064382</id>
      <parentid>995461</parentid>
      <timestamp>2003-06-04T03:17:23Z</timestamp>
      <contributor>
        <ip>68.12.202.57</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1059">The '''Holy Grail''' is said to be the cup [[Jesus Christ|Jesus]] drank from at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross. It was said to have the power to heal all wounds. Much of the christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail. The legend may have started off with a Holy Cauldron which merged with [[Christian]] beliefs, becoming a Grail.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

The [[film]]s ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' imagine 20th-century quests for the Grail.

Other films that involve the quest for the Grail include ''[[Excalibur (movie)|Excalibur]]'' and ''[[Monty Python and the Holy Grail]]''.


==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>01mpvdia92yg5nrz0xepxwhb5ajuzqg</sha1>
    </revision>
    <revision>
      <id>1064397</id>
      <parentid>1064382</parentid>
      <timestamp>2003-06-20T17:04:23Z</timestamp>
      <contributor>
        <username>Ihcoyc</username>
        <id>7513</id>
      </contributor>
      <comment>+ image</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1258">&lt;div style=&quot;float:left; width:255px; padding:10px;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
&lt;center&gt;''The Holy Grail'', by [[Dante Gabriel Rossetti]]&lt;/center&gt;
&lt;/div&gt;The '''Holy Grail''' is said to be the cup [[Jesus Christ|Jesus]] drank from at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross. It was said to have the power to heal all wounds. Much of the christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail. The legend may have started off with a Holy Cauldron which merged with [[Christian]] beliefs, becoming a Grail.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

The [[film]]s ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' imagine 20th-century quests for the Grail.

Other films that involve the quest for the Grail include ''[[Excalibur (movie)|Excalibur]]'' and ''[[Monty Python and the Holy Grail]]''.


==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>gdv8ka7x90ekwr9ia081queo9yk5h19</sha1>
    </revision>
    <revision>
      <id>1128146</id>
      <parentid>1064397</parentid>
      <timestamp>2003-06-20T17:10:29Z</timestamp>
      <contributor>
        <username>Ihcoyc</username>
        <id>7513</id>
      </contributor>
      <comment>+ knights</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1591">&lt;div style=&quot;float:left; width:255px; padding:10px;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
&lt;center&gt;''The Holy Grail'', by [[Dante Gabriel Rossetti]]&lt;/center&gt;
&lt;/div&gt;The '''Holy Grail''' is said to be the cup [[Jesus Christ|Jesus]] drank from at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross. It was said to have the power to heal all wounds. Much of the christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail. The legend may have started off with a Holy Cauldron which merged with [[Christian]] beliefs, becoming a Grail.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]].

The [[film]]s ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' imagine 20th-century quests for the Grail.

Other films that involve the quest for the Grail include ''[[Excalibur (movie)|Excalibur]]'' and ''[[Monty Python and the Holy Grail]]''.


==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>jljwny1vys91vhlo5zq33a5z5xz0h0a</sha1>
    </revision>
    <revision>
      <id>1128225</id>
      <parentid>1128146</parentid>
      <timestamp>2003-07-09T04:33:24Z</timestamp>
      <contributor>
        <username>Smack</username>
        <id>10888</id>
      </contributor>
      <comment>misc changes</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1892">&lt;div style=&quot;float:left; width:255px; padding:10px;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
&lt;center&gt;''The Holy Grail'', by [[Dante Gabriel Rossetti]]&lt;/center&gt;
&lt;/div&gt;
In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the cup from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a cauldron endowed with special powers.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]].

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership.

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>0drbqlk22gtfpo8u7b855uj8w84qlj0</sha1>
    </revision>
    <revision>
      <id>1205942</id>
      <parentid>1128225</parentid>
      <timestamp>2003-07-09T05:05:35Z</timestamp>
      <contributor>
        <username>Paul A</username>
        <id>7104</id>
      </contributor>
      <minor/>
      <comment>format</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="1921">&lt;div style=&quot;float:right; width:255px; margin-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the cup from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a cauldron endowed with special powers.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]].

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership.

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>6y2296wbuinm7y4x48e9slwodm1k0rm</sha1>
    </revision>
    <revision>
      <id>1215056</id>
      <parentid>1205942</parentid>
      <timestamp>2003-07-27T23:30:25Z</timestamp>
      <contributor>
        <username>Error</username>
        <id>9385</id>
      </contributor>
      <comment>Valencia. san grial. Cornucopia, sampo</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2446">&lt;div style=&quot;float:right; width:255px; margin-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral.

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical recipients.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>fe0jqmue1ph3q2p577eqd1qpmj6ddpv</sha1>
    </revision>
    <revision>
      <id>1270041</id>
      <parentid>1215056</parentid>
      <timestamp>2003-07-29T20:27:36Z</timestamp>
      <contributor>
        <username>Ihcoyc</username>
        <id>7513</id>
      </contributor>
      <minor/>
      <comment>clarify bit about cornucopia, sampo</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2484">&lt;div style=&quot;float:right; width:255px; margin-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral.

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>c5pz2a0tjhlq2gqc72glafv7dt1xu8x</sha1>
    </revision>
    <revision>
      <id>1378237</id>
      <parentid>1270041</parentid>
      <timestamp>2003-08-10T18:30:38Z</timestamp>
      <contributor>
        <ip>217.5.114.143</ip>
      </contributor>
      <comment>de</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2509">[[de:Heiliger Gral]]
&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral.

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>bj7uadby4p0nfxmdqff5sfrgngdfnh2</sha1>
    </revision>
    <revision>
      <id>1436337</id>
      <parentid>1378237</parentid>
      <timestamp>2003-09-01T20:08:18Z</timestamp>
      <contributor>
        <username>(</username>
        <id>7041</id>
      </contributor>
      <minor/>
      <comment>Montserrat (mountain)|Montserrat</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2531">[[de:Heiliger Gral]]
&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral.

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>ptms6cc494g3t5nhzhh2ugpc2t3xz0w</sha1>
    </revision>
    <revision>
      <id>1436342</id>
      <parentid>1436337</parentid>
      <timestamp>2003-09-15T10:36:01Z</timestamp>
      <contributor>
        <ip>157.193.40.5</ip>
      </contributor>
      <comment>dutch link added</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2552">[[de:Heiliger Gral]] [[nl:Heilige Graal]]
&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral.

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>nisd1bwxl6ly7izyysdgibrm7stogto</sha1>
    </revision>
    <revision>
      <id>1444696</id>
      <parentid>1436342</parentid>
      <timestamp>2003-09-15T10:37:06Z</timestamp>
      <contributor>
        <ip>157.193.40.5</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2552">[[de:Heiliger Gral]] [[nl:Heilige graal]]
&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral.

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>arhr1aa011c3w06fgtdetbf05qni7r8</sha1>
    </revision>
    <revision>
      <id>1629060</id>
      <parentid>1444696</parentid>
      <timestamp>2003-09-17T15:36:48Z</timestamp>
      <contributor>
        <ip>213.253.40.68</ip>
      </contributor>
      <comment>Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]].</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2625">[[de:Heiliger Gral]] [[nl:Heilige graal]]
&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]].

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>8vf1ive81x1bd13m3cm25jdhtq4sk6t</sha1>
    </revision>
    <revision>
      <id>1662920</id>
      <parentid>1629060</parentid>
      <timestamp>2003-10-26T15:21:07Z</timestamp>
      <contributor>
        <username>Modemac</username>
        <id>3552</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2950">[[de:Heiliger Gral]] [[nl:Heilige graal]]
&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]].

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>q7xmzuh2e6y7pz10uuuyvqdunwz320s</sha1>
    </revision>
    <revision>
      <id>1663049</id>
      <parentid>1662920</parentid>
      <timestamp>2003-11-02T11:44:10Z</timestamp>
      <contributor>
        <username>Glenn</username>
        <id>9232</id>
      </contributor>
      <minor/>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2979">[[da:Den hellige graal]]
[[de:Heiliger Gral]]
[[nl:Heilige graal]]

&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]].

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>cbzppko4ff47us0ajtibeeshoyk45zx</sha1>
    </revision>
    <revision>
      <id>1826215</id>
      <parentid>1663049</parentid>
      <timestamp>2003-11-02T12:41:52Z</timestamp>
      <contributor>
        <username>Glenn</username>
        <id>9232</id>
      </contributor>
      <minor/>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="2978">[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[nl:Heilige graal]]

&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]].

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>akyzec3404uwzggn4xlpwdbilhqooas</sha1>
    </revision>
    <revision>
      <id>1974528</id>
      <parentid>1826215</parentid>
      <timestamp>2003-11-27T12:35:22Z</timestamp>
      <contributor>
        <username>Ojigiri~enwiki</username>
        <id>31457</id>
      </contributor>
      <minor/>
      <comment>+ja</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3003">[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[ja:&amp;#32854;&amp;#26479;]]
[[nl:Heilige graal]]

&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]].

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>jshjzcpn9n4fm37fty374omodmt8gi8</sha1>
    </revision>
    <revision>
      <id>1974537</id>
      <parentid>1974528</parentid>
      <timestamp>2003-12-16T13:14:04Z</timestamp>
      <contributor>
        <username>Youandme</username>
        <id>3397</id>
      </contributor>
      <minor/>
      <comment>+pl:</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3017">[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[ja:&amp;#32854;&amp;#26479;]]
[[nl:Heilige graal]]
[[pl:Graal]]

&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]].

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>dl3jk8pukzer90t8x9zgz5qahfxmr2h</sha1>
    </revision>
    <revision>
      <id>2527580</id>
      <parentid>1974537</parentid>
      <timestamp>2003-12-16T13:15:37Z</timestamp>
      <contributor>
        <username>Youandme</username>
        <id>3397</id>
      </contributor>
      <minor/>
      <comment>+fr:</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3031">[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[nl:Heilige graal]]
[[pl:Graal]]

&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]].

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]</text>
      <sha1>i8rb7jlpemu9qd5azi9f2e261i15vl6</sha1>
    </revision>
    <revision>
      <id>2530676</id>
      <parentid>2527580</parentid>
      <timestamp>2004-02-25T18:21:18Z</timestamp>
      <contributor>
        <username>Robbot</username>
        <id>25261</id>
      </contributor>
      <minor/>
      <comment>Andre Engels - robot  Modifying:nl,de</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3021">&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]].

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>t3s61tlhyarrp577phmy1cwk594faxm</sha1>
    </revision>
    <revision>
      <id>2558076</id>
      <parentid>2530676</parentid>
      <timestamp>2004-02-25T22:45:37Z</timestamp>
      <contributor>
        <username>Lowellian</username>
        <id>29210</id>
      </contributor>
      <comment>+sangreal</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3092">&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot; The word '''Sangreal''' is sometimes used to refer to the Holy Grail.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]].

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>af6f7dtxmbwfomfuqxn8s0pkwhjkbog</sha1>
    </revision>
    <revision>
      <id>2594548</id>
      <parentid>2558076</parentid>
      <timestamp>2004-02-28T08:51:05Z</timestamp>
      <contributor>
        <username>Gabbe</username>
        <id>5894</id>
      </contributor>
      <comment>The one in Valencia is real, _according to the Vatican_</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3182">&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot; The word '''Sangreal''' is sometimes used to refer to the Holy Grail.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches, like the one in the cathedral of [[Valencia]] which is held officially by the [[Roman Catholic Church]] to be the real one. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]].

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]]. The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve. For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>67e7qxbjarstzym8c7eq7ju9d70qizd</sha1>
    </revision>
    <revision>
      <id>2780126</id>
      <parentid>2594548</parentid>
      <timestamp>2004-03-02T07:27:46Z</timestamp>
      <contributor>
        <username>Paul A</username>
        <id>7104</id>
      </contributor>
      <comment>I don't think we can say things like that without backing it up...</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3092">&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot; The word '''Sangreal''' is sometimes used to refer to the Holy Grail.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]].

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>af6f7dtxmbwfomfuqxn8s0pkwhjkbog</sha1>
    </revision>
    <revision>
      <id>2781221</id>
      <parentid>2780126</parentid>
      <timestamp>2004-03-15T19:49:49Z</timestamp>
      <contributor>
        <username>Genie</username>
        <id>11077</id>
      </contributor>
      <minor/>
      <comment>Added link</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="3250">&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. Much of the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

The identification of the cup of the Last Supper and the Grail could come from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot; The word '''Sangreal''' is sometimes used to refer to the Holy Grail.

According to one legend, the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights that succeeded, like [[Parsifal]] or [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In some of these legends, the Grail was custodied at [[Montsalvat]], which some have identified with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with various groups (including the [[Knights Templar]]) claiming ownership. There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]].

The legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]].  The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy based on the legend.

The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==

*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]
*[http://www.catholicism.org/News/Holy_Grail.htm Review of Salvador Antuñano Alea's book arguing that the chalice in Valencia Cathedral is the Holy Grail.]

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>3b52aw109kcvfvonv5d1muj4fukgnw6</sha1>
    </revision>
    <revision>
      <id>2788879</id>
      <parentid>2781221</parentid>
      <timestamp>2004-03-15T21:16:17Z</timestamp>
      <contributor>
        <username>Wetman</username>
        <id>21492</id>
      </contributor>
      <comment>details</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="5671">&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

The Grail legend is a Gothic legend, which came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the Quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Parsifal]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur&quot; which gave the body of legend its classic form. 

Literary sources in French courtly literature, Grail sources include [[Chretien de Troyes]]' ''Conte du Graal,'' in Germany, [[Wolfram von Eschenbach]]'s ''Parzifal,'' both early 13th century. Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot), who has not been identified. Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883).  

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==Modern retellings==
The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy spoofing clich&amp;eacute;s connected with the legend. 

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
*[http://sunsite.berkeley.edu/OMACL/Graal/ &quot;The high history of the holy Graal,&quot;] anonymous continuation of Chretien de Troyes, ''ca'' 1220, an early version of the Fate of the Grail (translated into English)
*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]
*[http://www.catholicism.org/News/Holy_Grail.htm Review of Salvador Antuñano Alea's book arguing that the chalice in Valencia Cathedral is the Holy Grail.]
*[http://www.newadvent.org/cathen/06719a.htm ''Catholic Encyclopedia'']: &quot;Grail, Holy. Speculations on the history of the legend.

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>mzpv8o5z799bfdjzmuo97zgnyuuo542</sha1>
    </revision>
    <revision>
      <id>2794581</id>
      <parentid>2788879</parentid>
      <timestamp>2004-03-16T09:19:01Z</timestamp>
      <contributor>
        <ip>24.201.147.213</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="6661">&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

The Grail legend is a Gothic legend, which came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the Quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Parsifal]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur&quot; which gave the body of legend its classic form. 

Literary sources in French courtly literature, Grail sources include [[Chretien de Troyes]]' ''Conte du Graal,'' in Germany, [[Wolfram von Eschenbach]]'s ''Parzifal,'' both early 13th century. Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot), who has not been identified. Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883).

==Grail theories==
Many new legends have risen over the centuries or during the modern revival of interest in Grail that will describe it as either a large emerald that fell from [[Lucifer]]'s crown when he was thrown out of Heaven; the [[Philosopher's Stone]]; the [[Ark of the Covenant]]; a book of Jesus' geneology; the silver dish supporting [[John the Baptist]]'s head; the sword used to cut off John the Baptist's head; the lance belonging to [[Longinus]], the Roman soldier who transfixed Jesus' chest; a secret [[gospel]] written by Jesus; the cup used by [[Mary, sister of Lazarus|Mary of Bethany]] to perfume Jesus' feet; the container of the [[Shroud of Turin]]; a round ball of glass filled with water held in a tree-like stand — the [[Thummim]] and the Urim; [[Alladin]]'s lamp, the [[Golden Fleece]]; or the [[Baphomet]]. One of the most popular theories claims that the Grail refers to both [[Mary Magdalene]] and a royal bloodline stemming from her marriage to Jesus.  

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==Modern retellings==
The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy spoofing clich&amp;eacute;s connected with the legend. 

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
*[http://sunsite.berkeley.edu/OMACL/Graal/ &quot;The high history of the holy Graal,&quot;] anonymous continuation of Chretien de Troyes, ''ca'' 1220, an early version of the Fate of the Grail (translated into English)
*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]
*[http://www.catholicism.org/News/Holy_Grail.htm Review of Salvador Antuñano Alea's book arguing that the chalice in Valencia Cathedral is the Holy Grail.]
*[http://www.newadvent.org/cathen/06719a.htm ''Catholic Encyclopedia'']: &quot;Grail, Holy. Speculations on the history of the legend.

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>b1ci3sikd9obviqrlm0re9ezcfb8xau</sha1>
    </revision>
    <revision>
      <id>2815432</id>
      <parentid>2794581</parentid>
      <timestamp>2004-03-16T20:15:13Z</timestamp>
      <contributor>
        <ip>24.201.147.213</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="6661">&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

The Grail legend is a Gothic legend, which came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the Quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Parsifal]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur&quot; which gave the body of legend its classic form. 

Literary sources in French courtly literature, Grail sources include [[Chretien de Troyes]]' ''Conte du Graal,'' in Germany, [[Wolfram von Eschenbach]]'s ''Parzifal,'' both early 13th century. Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot), who has not been identified. Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883).

==Grail theories==
Many new legends have arisen over the centuries or during the modern revival of interest in the Grail that will describe it as either an emerald that fell from [[Lucifer]]'s crown when he was thrown out of Heaven; the [[Philosopher's Stone]]; the [[Ark of the Covenant]]; a book of Jesus' geneology; the silver dish supporting [[John the Baptist]]'s head; the sword used to cut off John the Baptist's head; the lance belonging to [[Longinus]], the Roman soldier who transfixed Jesus' chest; a secret [[gospel]] written by Jesus; the cup used by [[Mary, sister of Lazarus|Mary of Bethany]] to perfume Jesus' feet; the container of the [[Shroud of Turin]]; a round ball of glass filled with water held in a tree-like stand — the [[Thummim]] and the Urim; [[Alladin]]'s lamp, the [[Golden Fleece]]; or the [[Baphomet]]. One of the most popular theories claims that the Grail refers to both [[Mary Magdalene]] and a royal bloodline stemming from her marriage to Jesus.  

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==Modern retellings==
The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy spoofing clich&amp;eacute;s connected with the legend. 

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
*[http://sunsite.berkeley.edu/OMACL/Graal/ &quot;The high history of the holy Graal,&quot;] anonymous continuation of Chretien de Troyes, ''ca'' 1220, an early version of the Fate of the Grail (translated into English)
*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]
*[http://www.catholicism.org/News/Holy_Grail.htm Review of Salvador Antuñano Alea's book arguing that the chalice in Valencia Cathedral is the Holy Grail.]
*[http://www.newadvent.org/cathen/06719a.htm ''Catholic Encyclopedia'']: &quot;Grail, Holy. Speculations on the history of the legend.

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>frebzgt29995gx598vi1v5nhz0g4q1h</sha1>
    </revision>
    <revision>
      <id>2957945</id>
      <parentid>2815432</parentid>
      <timestamp>2004-03-18T08:16:21Z</timestamp>
      <contributor>
        <username>Paul A</username>
        <id>7104</id>
      </contributor>
      <minor/>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="6659">&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

The Grail legend is a Gothic legend, which came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the Quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Parsifal]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Literary sources in French courtly literature, Grail sources include [[Chretien de Troyes]]' ''Conte du Graal,'' in Germany, [[Wolfram von Eschenbach]]'s ''Parzifal,'' both early 13th century. Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot), who has not been identified. Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883).

==Grail theories==
Many new legends have arisen over the centuries or during the modern revival of interest in the Grail that will describe it as either an emerald that fell from [[Lucifer]]'s crown when he was thrown out of Heaven; the [[Philosopher's Stone]]; the [[Ark of the Covenant]]; a book of Jesus' geneology; the silver dish supporting [[John the Baptist]]'s head; the sword used to cut off John the Baptist's head; the lance belonging to [[Longinus]], the Roman soldier who transfixed Jesus' chest; a secret [[gospel]] written by Jesus; the cup used by [[Mary, sister of Lazarus|Mary of Bethany]] to perfume Jesus' feet; the container of the [[Shroud of Turin]]; a round ball of glass filled with water held in a tree-like stand — the [[Thummim]] and the Urim; [[Aladdin]]'s lamp, the [[Golden Fleece]]; or the [[Baphomet]]. One of the most popular theories claims that the Grail refers to both [[Mary Magdalene]] and a royal bloodline stemming from her marriage to Jesus.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==Modern retellings==
The movie ''[[Excalibur (movie)|Excalibur]]'' is a modern representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy spoofing clich&amp;eacute;s connected with the legend. 

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
*[http://sunsite.berkeley.edu/OMACL/Graal/ &quot;The high history of the holy Graal,&quot;] anonymous continuation of Chretien de Troyes, ''ca'' 1220, an early version of the Fate of the Grail (translated into English)
*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]
*[http://www.catholicism.org/News/Holy_Grail.htm Review of Salvador Antuñano Alea's book arguing that the chalice in Valencia Cathedral is the Holy Grail.]
*[http://www.newadvent.org/cathen/06719a.htm ''Catholic Encyclopedia'']: &quot;Grail, Holy. Speculations on the history of the legend.

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>blpic2prx3gonhxbk0ghs45fmvt5q3b</sha1>
    </revision>
    <revision>
      <id>2958185</id>
      <parentid>2957945</parentid>
      <timestamp>2004-03-28T20:25:08Z</timestamp>
      <contributor>
        <ip>64.174.43.34</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="6664">&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

The Grail legend is a Gothic legend, which came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the Quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Parsifal]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Literary sources in French courtly literature, Grail sources include [[Chretien de Troyes]]' ''Conte du Graal,'' in Germany, [[Wolfram von Eschenbach]]'s ''Parzifal,'' both early 13th century. Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot), who has not been identified. Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883).

==Grail theories==
Many new legends have arisen over the centuries or during the modern revival of interest in the Grail that will describe it as either an emerald that fell from [[Lucifer]]'s crown when he was thrown out of Heaven; the [[Philosopher's Stone]]; the [[Ark of the Covenant]]; a book of Jesus' geneology; the silver dish supporting [[John the Baptist]]'s head; the sword used to cut off John the Baptist's head; the lance belonging to [[Longinus]], the Roman soldier who transfixed Jesus' chest; a secret [[gospel]] written by Jesus; the cup used by [[Mary, sister of Lazarus|Mary of Bethany]] to perfume Jesus' feet; the container of the [[Shroud of Turin]]; a round ball of glass filled with water held in a tree-like stand — the [[Thummim]] and the Urim; [[Aladdin]]'s lamp, the [[Golden Fleece]]; or the [[Baphomet]]. One of the most popular theories claims that the Grail refers to both [[Mary Magdalene]] and a royal bloodline stemming from her marriage to Jesus.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==Modern retellings==
The movie ''[[Excalibur (movie)|Excalibur]]'' is a traditional representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy spoofing clich&amp;eacute;s connected with the legend. 

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
*[http://sunsite.berkeley.edu/OMACL/Graal/ &quot;The high history of the holy Graal,&quot;] anonymous continuation of Chretien de Troyes, ''ca'' 1220, an early version of the Fate of the Grail (translated into English)
*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]
*[http://www.catholicism.org/News/Holy_Grail.htm Review of Salvador Antuñano Alea's book arguing that the chalice in Valencia Cathedral is the Holy Grail.]
*[http://www.newadvent.org/cathen/06719a.htm ''Catholic Encyclopedia'']: &quot;Grail, Holy. Speculations on the history of the legend.

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>cdzos4eblr3qbvg5ddcmrlrbivxlzd2</sha1>
    </revision>
    <revision>
      <id>2960859</id>
      <parentid>2958185</parentid>
      <timestamp>2004-03-28T20:49:59Z</timestamp>
      <contributor>
        <username>Wetman</username>
        <id>21492</id>
      </contributor>
      <comment>removed Pop Grail nonsense to Discussion page</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="5678">&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that caught his blood when he was on the cross, or both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

The Grail legend is a Gothic legend, which came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the Quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Parsifal]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Literary sources in French courtly literature, Grail sources include [[Chretien de Troyes]]' ''Conte du Graal,'' in Germany, [[Wolfram von Eschenbach]]'s ''Parzifal,'' both early 13th century. Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot), who has not been identified. Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883).



==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==Modern retellings==
The movie ''[[Excalibur (movie)|Excalibur]]'' is a traditional representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy spoofing clich&amp;eacute;s connected with the legend. 

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
*[http://sunsite.berkeley.edu/OMACL/Graal/ &quot;The high history of the holy Graal,&quot;] anonymous continuation of Chretien de Troyes, ''ca'' 1220, an early version of the Fate of the Grail (translated into English)
*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]
*[http://www.catholicism.org/News/Holy_Grail.htm Review of Salvador Antuñano Alea's book arguing that the chalice in Valencia Cathedral is the Holy Grail.]
*[http://www.newadvent.org/cathen/06719a.htm ''Catholic Encyclopedia'']: &quot;Grail, Holy. Speculations on the history of the legend.

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>g41bjofb0i57yizxiqkhqxee5asg84s</sha1>
    </revision>
    <revision>
      <id>2962528</id>
      <parentid>2960859</parentid>
      <timestamp>2004-03-29T00:48:43Z</timestamp>
      <contributor>
        <username>Error</username>
        <id>9385</id>
      </contributor>
      <comment>Holy Blood, Holy Grail</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="5930">&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

In [[Christianity|Christian]] [[mythology]], the '''Holy Grail''' is the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers.

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

The Grail legend is a Gothic legend, which came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the Quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Parsifal]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Literary sources in French courtly literature, Grail sources include [[Chretien de Troyes]]' ''Conte du Graal,'' in Germany, [[Wolfram von Eschenbach]]'s ''Parzifal,'' both early 13th century. Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot), who has not been identified. Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883).

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the term ''holy grail'' in modern-day culture.  A &quot;holy grail&quot; is seen as the ultimate goal for a person or organization to achieve.  For instance, in sports, fans of the professional [[baseball]] refer to a [[World Series]] championship as their team's Holy Grail.

==Modern retellings==
The movie ''[[Excalibur (movie)|Excalibur]]'' is a traditional representation of the tale, while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in a modern setting.  ''[[Monty Python and the Holy Grail]]'' is a comedy spoofing clich&amp;eacute;s connected with the legend.
The authors of [[Holy Blood, Holy Grail]] assert that their research ultimately reveal that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children whose bloodline continues today.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
*[http://sunsite.berkeley.edu/OMACL/Graal/ &quot;The high history of the holy Graal,&quot;] anonymous continuation of Chretien de Troyes, ''ca'' 1220, an early version of the Fate of the Grail (translated into English)
*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]
*[http://www.catholicism.org/News/Holy_Grail.htm Review of Salvador Antuñano Alea's book arguing that the chalice in Valencia Cathedral is the Holy Grail.]
*[http://www.newadvent.org/cathen/06719a.htm ''Catholic Encyclopedia'']: &quot;Grail, Holy. Speculations on the history of the legend.

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>qh3jskswhvql21dssimzwvrh6rxd0bw</sha1>
    </revision>
    <revision>
      <id>2963459</id>
      <parentid>2962528</parentid>
      <timestamp>2004-03-29T03:38:47Z</timestamp>
      <contributor>
        <username>Wetman</username>
        <id>21492</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7331">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Parsifal]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Literary sources in French courtly literature, Grail sources include [[Chretien de Troyes]]' ''Conte du Graal,'' in Germany, [[Wolfram von Eschenbach]]'s ''Parzifal,'' both early 13th century. Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot), who has not been identified. Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. ''[[Babylon 5]]'' took the Quest into interstellar space in 1995's ''Grail/Eyes''. 

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose Merovingian bloodline continues today, the Grail is a meresideshow.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
*[http://sunsite.berkeley.edu/OMACL/Graal/ &quot;The high history of the holy Graal,&quot;] anonymous continuation of Chretien de Troyes, ''ca'' 1220, an early version of the Fate of the Grail (translated into English)
*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]
*[http://www.catholicism.org/News/Holy_Grail.htm Review of Salvador Antuñano Alea's book arguing that the chalice in Valencia Cathedral is the Holy Grail.]
*[http://www.newadvent.org/cathen/06719a.htm ''Catholic Encyclopedia'']: &quot;Grail, Holy. Speculations on the history of the legend.

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>pnyq7xcry5auvh6znmrdm7s10grzq8k</sha1>
    </revision>
    <revision>
      <id>2963468</id>
      <parentid>2963459</parentid>
      <timestamp>2004-03-29T05:14:15Z</timestamp>
      <contributor>
        <username>Bryan Derksen</username>
        <id>66</id>
      </contributor>
      <minor/>
      <comment>link</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7335">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Parsifal]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Literary sources in French courtly literature, Grail sources include [[Chretien de Troyes]]' ''Conte du Graal,'' in Germany, [[Wolfram von Eschenbach]]'s ''Parzifal,'' both early 13th century. Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot), who has not been identified. Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div style=&quot;float:right; width:255px; padding-left:0.5em; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. ''[[Babylon 5]]'' took the Quest into interstellar space in 1995's ''Grail/Eyes''. 

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a meresideshow.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
*[http://sunsite.berkeley.edu/OMACL/Graal/ &quot;The high history of the holy Graal,&quot;] anonymous continuation of Chretien de Troyes, ''ca'' 1220, an early version of the Fate of the Grail (translated into English)
*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]
*[http://www.catholicism.org/News/Holy_Grail.htm Review of Salvador Antuñano Alea's book arguing that the chalice in Valencia Cathedral is the Holy Grail.]
*[http://www.newadvent.org/cathen/06719a.htm ''Catholic Encyclopedia'']: &quot;Grail, Holy. Speculations on the history of the legend.

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>lyf1tr6nka5hfeybnomenz8ned79tax</sha1>
    </revision>
    <revision>
      <id>3048728</id>
      <parentid>2963468</parentid>
      <timestamp>2004-03-29T05:15:22Z</timestamp>
      <contributor>
        <username>Bryan Derksen</username>
        <id>66</id>
      </contributor>
      <minor/>
      <comment>fmt</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7322">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Parsifal]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Literary sources in French courtly literature, Grail sources include [[Chretien de Troyes]]' ''Conte du Graal,'' in Germany, [[Wolfram von Eschenbach]]'s ''Parzifal,'' both early 13th century. Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot), who has not been identified. Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. ''[[Babylon 5]]'' took the Quest into interstellar space in 1995's ''Grail/Eyes''. 

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
*[http://sunsite.berkeley.edu/OMACL/Graal/ &quot;The high history of the holy Graal,&quot;] anonymous continuation of Chretien de Troyes, ''ca'' 1220, an early version of the Fate of the Grail (translated into English)
*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]
*[http://www.catholicism.org/News/Holy_Grail.htm Review of Salvador Antuñano Alea's book arguing that the chalice in Valencia Cathedral is the Holy Grail.]
*[http://www.newadvent.org/cathen/06719a.htm ''Catholic Encyclopedia'']: &quot;Grail, Holy. Speculations on the history of the legend.

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>pf9qq2baqbp99du2p7nqfwe4lyofnd6</sha1>
    </revision>
    <revision>
      <id>3054944</id>
      <parentid>3048728</parentid>
      <timestamp>2004-04-04T04:49:46Z</timestamp>
      <contributor>
        <ip>207.75.179.208</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7452">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Parsifal]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Literary sources in French courtly literature, Grail sources include [[Chretien de Troyes]]' ''Conte du Graal,'' in Germany, [[Wolfram von Eschenbach]]'s ''Parzifal,'' both early 13th century.  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. ''[[Babylon 5]]'' took the Quest into interstellar space in 1995's ''Grail/Eyes''. 

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
*[http://sunsite.berkeley.edu/OMACL/Graal/ &quot;The high history of the holy Graal,&quot;] anonymous continuation of Chretien de Troyes, ''ca'' 1220, an early version of the Fate of the Grail (translated into English)
*[http://www.usao.edu/~facshaferi/GRAIL.HTML The Holy Grail]
*[http://www.catholicism.org/News/Holy_Grail.htm Review of Salvador Antuñano Alea's book arguing that the chalice in Valencia Cathedral is the Holy Grail.]
*[http://www.newadvent.org/cathen/06719a.htm ''Catholic Encyclopedia'']: &quot;Grail, Holy. Speculations on the history of the legend.

[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>lecu9nxlb149335f7g7zff3b3x0vmbk</sha1>
    </revision>
    <revision>
      <id>3054956</id>
      <parentid>3054944</parentid>
      <timestamp>2004-04-04T17:03:20Z</timestamp>
      <contributor>
        <ip>24.201.160.7</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7063">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Parsifal]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Literary sources in French courtly literature, Grail sources include [[Chretien de Troyes]]' ''Conte du Graal,'' in Germany, [[Wolfram von Eschenbach]]'s ''Parzifal,'' both early 13th century.  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. ''[[Babylon 5]]'' took the Quest into interstellar space in 1995's ''Grail/Eyes''. 

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links and references==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to all the important sites on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>kb0g6rwxfcqpr59w4g0qe710n3cxbv2</sha1>
    </revision>
    <revision>
      <id>3077185</id>
      <parentid>3054956</parentid>
      <timestamp>2004-04-04T17:03:55Z</timestamp>
      <contributor>
        <ip>24.201.160.7</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7061">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Parsifal]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Literary sources in French courtly literature, Grail sources include [[Chretien de Troyes]]' ''Conte du Graal,'' in Germany, [[Wolfram von Eschenbach]]'s ''Parzifal,'' both early 13th century.  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. ''[[Babylon 5]]'' took the Quest into interstellar space in 1995's ''Grail/Eyes''. 

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links and references==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to the 8 important sites on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>67rgpsfl6i4m5hu7q0zu0hgstw0k2lf</sha1>
    </revision>
    <revision>
      <id>3084559</id>
      <parentid>3077185</parentid>
      <timestamp>2004-04-06T02:25:07Z</timestamp>
      <contributor>
        <username>McCann51</username>
        <id>52297</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7062">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Literary sources in French courtly literature, Grail sources include [[Chretien de Troyes]]' ''Conte du Graal,'' in Germany, [[Wolfram von Eschenbach]]'s ''Parzifal,'' both early 13th century.  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. ''[[Babylon 5]]'' took the Quest into interstellar space in 1995's ''Grail/Eyes''. 

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links and references==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to the 8 important sites on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>edi2mup0v2so12qpwjufd2o6l0uzesj</sha1>
    </revision>
    <revision>
      <id>3172791</id>
      <parentid>3084559</parentid>
      <timestamp>2004-04-06T16:51:51Z</timestamp>
      <contributor>
        <username>Seth Ilys</username>
        <id>35314</id>
      </contributor>
      <comment>=Modern retellings= clarify B5</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7122">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Literary sources in French courtly literature, Grail sources include [[Chretien de Troyes]]' ''Conte du Graal,'' in Germany, [[Wolfram von Eschenbach]]'s ''Parzifal,'' both early 13th century.  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links and references==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to the 8 important sites on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>hfrefh5g8v23gwfhtlefxptakh3dr3f</sha1>
    </revision>
    <revision>
      <id>3172888</id>
      <parentid>3172791</parentid>
      <timestamp>2004-04-13T13:45:07Z</timestamp>
      <contributor>
        <ip>130.203.164.171</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7132">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chretien de Troyes]]' ''Conte du Graal'' (French, late 12th century) and [[Wolfram von Eschenbach]]'s ''Parzifal,'' (German, early 13th century.  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provencal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links and references==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to the 8 important sites on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>4mbpxbyctvifgukniwzzk2nofty5r8w</sha1>
    </revision>
    <revision>
      <id>3464603</id>
      <parentid>3172888</parentid>
      <timestamp>2004-04-13T13:56:30Z</timestamp>
      <contributor>
        <ip>130.203.164.171</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7186">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links and references==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to the 8 important sites on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>ou7bbr3zl2k2fxfae8fbdb0hd2uyl54</sha1>
    </revision>
    <revision>
      <id>3464674</id>
      <parentid>3464603</parentid>
      <timestamp>2004-05-05T21:57:15Z</timestamp>
      <contributor>
        <ip>129.177.138.175</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7519">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. Dan Brown's bestselling 
novel [[The Da Vinci Code]] is likewise based on the idea that the &quot;real&quot;
Grail is not a cup but the earthly remains of Mary Magdalene, cast as Jesus' wife, and/or a set of documents telling the &quot;true&quot; story of Jesus, his teachings
and descendants (his bloodline supposedly surviving to the present day).

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links and references==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to the 8 important sites on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>evw5smwp2q7vjxnl5ix0crtax8w1qu7</sha1>
    </revision>
    <revision>
      <id>3464810</id>
      <parentid>3464674</parentid>
      <timestamp>2004-05-05T22:03:34Z</timestamp>
      <contributor>
        <ip>129.177.138.175</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7476">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. Dan Brown's bestselling 
novel [[The Da Vinci Code]] is likewise based on the idea that the &quot;real&quot;
Grail is not a cup but the earthly remains of Mary Magdalene, again cast as Jesus' wife, and/or a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links and references==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to the 8 important sites on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>tovn5g0ui74ewum4cflhmy0k13vugo7</sha1>
    </revision>
    <revision>
      <id>3464824</id>
      <parentid>3464810</parentid>
      <timestamp>2004-05-05T22:13:00Z</timestamp>
      <contributor>
        <username>Loremaster</username>
        <id>58926</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7481">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. Dan Brown's bestselling 
novel [[The Da Vinci Code]] is likewise based on the idea that the &quot;real&quot;
Grail is not a cup but the earthly remains of Mary Magdalene, again cast as Jesus' wife, and/or a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links and references==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important resource sites on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>52f2g530sn8l06u9m7lv47089psat01</sha1>
    </revision>
    <revision>
      <id>3464831</id>
      <parentid>3464824</parentid>
      <timestamp>2004-05-05T22:14:11Z</timestamp>
      <contributor>
        <username>Loremaster</username>
        <id>58926</id>
      </contributor>
      <minor/>
      <comment>=External links and references=</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7470">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. Dan Brown's bestselling 
novel [[The Da Vinci Code]] is likewise based on the idea that the &quot;real&quot;
Grail is not a cup but the earthly remains of Mary Magdalene, again cast as Jesus' wife, and/or a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==See also==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>3od6upv29838yz6pkuw29blv9202j91</sha1>
    </revision>
    <revision>
      <id>3470479</id>
      <parentid>3464831</parentid>
      <timestamp>2004-05-05T22:14:38Z</timestamp>
      <contributor>
        <username>Loremaster</username>
        <id>58926</id>
      </contributor>
      <comment>=See also=</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7476">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. Dan Brown's bestselling 
novel [[The Da Vinci Code]] is likewise based on the idea that the &quot;real&quot;
Grail is not a cup but the earthly remains of Mary Magdalene, again cast as Jesus' wife, and/or a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related Articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>4kuip5avo7z3v8alx2baw0nrym2ejpl</sha1>
    </revision>
    <revision>
      <id>3503725</id>
      <parentid>3470479</parentid>
      <timestamp>2004-05-06T09:51:19Z</timestamp>
      <contributor>
        <username>Sfdan</username>
        <id>3464</id>
      </contributor>
      <minor/>
      <comment>Link</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7479">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel [[The Da Vinci Code]] is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene, again cast as Jesus' wife, and/or a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related Articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>rmm1uxhtmo00dm22zvuphdyv3oxf9qz</sha1>
    </revision>
    <revision>
      <id>3576340</id>
      <parentid>3503725</parentid>
      <timestamp>2004-05-08T23:12:39Z</timestamp>
      <contributor>
        <ip>129.177.138.184</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7484">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger. The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related Articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>2bjxl5vh47rsd6lu9gqwmdgbmqf4ugz</sha1>
    </revision>
    <revision>
      <id>3662858</id>
      <parentid>3576340</parentid>
      <timestamp>2004-05-14T14:05:41Z</timestamp>
      <contributor>
        <username>Ihcoyc</username>
        <id>7513</id>
      </contributor>
      <comment>=Modern retellings= + The Silver Chalice</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7769">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] which was made into a [[1954]] movie in which [[Paul Newman]] débuted, is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related Articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>iomi8aavejp0wd27i0458emoujg4b07</sha1>
    </revision>
    <revision>
      <id>3765745</id>
      <parentid>3662858</parentid>
      <timestamp>2004-05-20T19:57:56Z</timestamp>
      <contributor>
        <username>Loremaster</username>
        <id>58926</id>
      </contributor>
      <comment>=Related Articles=</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7767">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] which was made into a [[1954]] movie in which [[Paul Newman]] débuted, is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>7w2d537phqxpwydt2zmawctf42rgyil</sha1>
    </revision>
    <revision>
      <id>3853233</id>
      <parentid>3765745</parentid>
      <timestamp>2004-05-28T22:40:28Z</timestamp>
      <contributor>
        <username>Trc</username>
        <id>66503</id>
      </contributor>
      <comment>=Fate of the Grail= Emmerich referred to the Grail; link to book text</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7934">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Anna Catherine Emmerich mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] which was made into a [[1954]] movie in which [[Paul Newman]] débuted, is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail


[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>pfvuxy8mjh0q4wq79hg91nz3c5jfpry</sha1>
    </revision>
    <revision>
      <id>4064386</id>
      <parentid>3853233</parentid>
      <timestamp>2004-06-03T03:40:32Z</timestamp>
      <contributor>
        <username>Ihcoyc</username>
        <id>7513</id>
      </contributor>
      <minor/>
      <comment>/* External links */ category</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7926">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Anna Catherine Emmerich mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] which was made into a [[1954]] movie in which [[Paul Newman]] débuted, is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>cnkmfry57nmiz8nhcnpjj6quopwb3wb</sha1>
    </revision>
    <revision>
      <id>4064858</id>
      <parentid>4064386</parentid>
      <timestamp>2004-06-13T04:01:17Z</timestamp>
      <contributor>
        <username>Trc</username>
        <id>66503</id>
      </contributor>
      <comment>/* Fate of the Grail */ wiki [[Anne Catherine Emmerich]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7930">In [[Christianity|Christian]] [[mythology]], the legendary Celtic '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] which was made into a [[1954]] movie in which [[Paul Newman]] débuted, is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>pu3tw2bbpqamvak14hay6i5881vkmlw</sha1>
    </revision>
    <revision>
      <id>4064867</id>
      <parentid>4064858</parentid>
      <timestamp>2004-06-13T04:43:42Z</timestamp>
      <contributor>
        <username>Mirv</username>
        <id>29678</id>
      </contributor>
      <comment>[[Christianity|Christian]] [[mythology]] -&gt; [[Christian mythology]], trim needless words (not always Celtic, there were French legends)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7896">In [[Christian mythology]], the '''Holy Grail''' became the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood when he was on the cross]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] which was made into a [[1954]] movie in which [[Paul Newman]] débuted, is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>8w3m2qevbcsh422sactv226qx8krv0d</sha1>
    </revision>
    <revision>
      <id>4176927</id>
      <parentid>4064867</parentid>
      <timestamp>2004-06-13T04:44:28Z</timestamp>
      <contributor>
        <username>Mirv</username>
        <id>29678</id>
      </contributor>
      <minor/>
      <comment>gr</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7891">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person or organization to achieve. [[Cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.  
==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] which was made into a [[1954]] movie in which [[Paul Newman]] débuted, is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>elg4glbktscymytyaf5n6lcu14nvmsr</sha1>
    </revision>
    <revision>
      <id>4178399</id>
      <parentid>4176927</parentid>
      <timestamp>2004-06-20T04:52:51Z</timestamp>
      <contributor>
        <username>VeryVerily</username>
        <id>18610</id>
      </contributor>
      <comment>/* Casual metaphor */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7912">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later 12th and early 13th centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] which was made into a [[1954]] movie in which [[Paul Newman]] débuted, is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>8vk1gpyn6mgxyz8isfxqhsuu3jay0p8</sha1>
    </revision>
    <revision>
      <id>4183030</id>
      <parentid>4178399</parentid>
      <timestamp>2004-06-20T06:31:24Z</timestamp>
      <contributor>
        <username>Itai</username>
        <id>17456</id>
      </contributor>
      <minor/>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7946">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] which was made into a [[1954]] movie in which [[Paul Newman]] débuted, is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>l7gtf1k92r0llh4hxiah0wxy342wgxz</sha1>
    </revision>
    <revision>
      <id>4184443</id>
      <parentid>4183030</parentid>
      <timestamp>2004-06-20T14:27:16Z</timestamp>
      <contributor>
        <username>Stefan Kögl</username>
        <id>35821</id>
      </contributor>
      <minor/>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7955">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] which was made into a [[1954]] movie in which [[Paul Newman]] débuted, is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  The movie ''[[Excalibur (movie)|Excalibur]]'' is a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. The Grail has turned up in movies before: ''Parsifal'', ''The Light of Faith'' (1922; Lon Chaney attempts to steal it, for the finest of reasons) ''Lancelot of the Lake'' (1974; [[Robert Bresson]]'s gritty retelling) and ''Brancaleone at the Crusades,'' while ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>64ua1xt03s5y43fdn5ppn17io2z1gyg</sha1>
    </revision>
    <revision>
      <id>4185089</id>
      <parentid>4184443</parentid>
      <timestamp>2004-06-20T16:16:22Z</timestamp>
      <contributor>
        <username>Wetman</username>
        <id>21492</id>
      </contributor>
      <comment>/* Modern retellings */  giving the movies each its own sentence</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="7969">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>foppdogqnq4ezwd4uh699p77c1tefi6</sha1>
    </revision>
    <revision>
      <id>4193168</id>
      <parentid>4185089</parentid>
      <timestamp>2004-06-20T16:59:02Z</timestamp>
      <contributor>
        <username>Wetman</username>
        <id>21492</id>
      </contributor>
      <comment>three medieval Grails</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11361">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near Jerusalam between the basilica of Golgotha and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish pint. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at Byzantium. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at Genoa, in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from emerald, it is in fact a green Egyptian glass dish, about eighteen inches across. It was sent to Paris after Napoleon’s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at Caesarea in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a large cup&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo caliz,'' an agate cup in the cathedral of Valencia. It has been set in a medieval mounting and given a foot made of an inverted cup of chalcedony. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of San Juan de la Peña to king Martín I of Aragon in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.   

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.
&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;


==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>4fdoak6oi5yvka7s3vqnwfmnzyq0q84</sha1>
    </revision>
    <revision>
      <id>4547890</id>
      <parentid>4193168</parentid>
      <timestamp>2004-06-21T01:34:51Z</timestamp>
      <contributor>
        <username>Error</username>
        <id>9385</id>
      </contributor>
      <minor/>
      <comment>/* Three medieval relics */  Links</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11425">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon’s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  this or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.
&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;


==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>nigjyh7vjyuo0a3nglxg715devbjex0</sha1>
    </revision>
    <revision>
      <id>4569978</id>
      <parentid>4547890</parentid>
      <timestamp>2004-07-10T20:59:25Z</timestamp>
      <contributor>
        <ip>66.35.103.105</ip>
      </contributor>
      <comment>/* Casual metaphor */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11424">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon’s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.
&lt;div class=&quot;floatright&quot; style=&quot;width:255px; font-size:smaller; text-align:center;&quot;&gt;
[[Image:holygrail.jpg|The Holy Grail, by Dante Gabriel Rossetti]]&lt;br&gt;
''The Holy Grail'', by [[Dante Gabriel Rossetti]]
&lt;/div&gt;

==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>qiixw5dekvemnb2x968fn0xf5nyv2gx</sha1>
    </revision>
    <revision>
      <id>4571958</id>
      <parentid>4569978</parentid>
      <timestamp>2004-07-12T00:00:36Z</timestamp>
      <contributor>
        <username>Mirv</username>
        <id>29678</id>
      </contributor>
      <comment>fmt and move up image</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11304">[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]&lt;br&gt;

In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon’s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>kxgwimmm7592o83zpxbtvhsosku5ucw</sha1>
    </revision>
    <revision>
      <id>4753028</id>
      <parentid>4571958</parentid>
      <timestamp>2004-07-12T01:56:39Z</timestamp>
      <contributor>
        <username>Mirv</username>
        <id>29678</id>
      </contributor>
      <minor/>
      <comment>image back down</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11299">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''Morte d'Arthur'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon’s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>fl0u55z2tyq5dlxly0sf27omwdzvabc</sha1>
    </revision>
    <revision>
      <id>4926273</id>
      <parentid>4753028</parentid>
      <timestamp>2004-07-20T21:20:51Z</timestamp>
      <contributor>
        <username>Suchire</username>
        <id>85051</id>
      </contributor>
      <minor/>
      <comment>/* Quest for the Grail */  Reformatted Morte Darthur</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11302">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Morte Darthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon’s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of Mary Magdalene (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>i2oj02ftyx3io9abq5lpf3vuqu9ov1u</sha1>
    </revision>
    <revision>
      <id>5002103</id>
      <parentid>4926273</parentid>
      <timestamp>2004-07-31T01:18:35Z</timestamp>
      <contributor>
        <ip>217.210.15.104</ip>
      </contributor>
      <comment>/* Modern retellings */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11306">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Morte Darthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon’s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>9cfh5axmar53v0j3c4kltxq1clgc0d4</sha1>
    </revision>
    <revision>
      <id>5452184</id>
      <parentid>5002103</parentid>
      <timestamp>2004-08-04T19:34:42Z</timestamp>
      <contributor>
        <username>Guanabot</username>
        <id>82928</id>
      </contributor>
      <minor/>
      <comment>Guanaco - robot: changing Windows-1252 characters to HTML entities</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11310">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Morte Darthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>3jsx1d5khqm4nqovlgehai969ny1l03</sha1>
    </revision>
    <revision>
      <id>5703156</id>
      <parentid>5452184</parentid>
      <timestamp>2004-08-26T08:47:08Z</timestamp>
      <contributor>
        <ip>62.234.145.72</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11568">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is believed by some to be a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Morte Darthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>ssju6a97c9kz366jj7rrpdtg90ghvvx</sha1>
    </revision>
    <revision>
      <id>5703175</id>
      <parentid>5703156</parentid>
      <timestamp>2004-09-06T22:20:12Z</timestamp>
      <contributor>
        <ip>66.206.141.12</ip>
      </contributor>
      <comment>/* Fate of the Grail */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11552">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is believed by some to be a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Morte Darthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>9uonwm0if612n93499hlr7al2hfw4zh</sha1>
    </revision>
    <revision>
      <id>5705294</id>
      <parentid>5703175</parentid>
      <timestamp>2004-09-06T22:20:53Z</timestamp>
      <contributor>
        <ip>66.206.141.12</ip>
      </contributor>
      <comment>/* Fate of the Grail */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11568">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is believed by some to be a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. [[Anne Catherine Emmerich]] mentions the Grail within her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 The Dolorous Passion of Our Lord Jesus Christ].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Morte Darthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>ssju6a97c9kz366jj7rrpdtg90ghvvx</sha1>
    </revision>
    <revision>
      <id>5711532</id>
      <parentid>5705294</parentid>
      <timestamp>2004-09-07T00:07:22Z</timestamp>
      <contributor>
        <username>Wetman</username>
        <id>21492</id>
      </contributor>
      <comment>/* Fate of the Grail */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11882">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is believed by some to be a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Morte Darthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chr&amp;eacute;tien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Proven&amp;ccedil;al lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>d1onasik6cb4hyotgd26gdj7fvvaazw</sha1>
    </revision>
    <revision>
      <id>5718239</id>
      <parentid>5711532</parentid>
      <timestamp>2004-09-07T05:25:57Z</timestamp>
      <contributor>
        <username>Guanabot</username>
        <id>82928</id>
      </contributor>
      <minor/>
      <comment>Guanaco - robot: changing unnecessary HTML entities to ISO-8859-1 characters - see [[Wikipedia:Special characters]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11870">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the quest for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is believed by some to be a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Morte Darthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>irxxv8no5u0uqyipoiov6epgemvcdui</sha1>
    </revision>
    <revision>
      <id>5760405</id>
      <parentid>5718239</parentid>
      <timestamp>2004-09-07T14:02:05Z</timestamp>
      <contributor>
        <username>Ihcoyc</username>
        <id>7513</id>
      </contributor>
      <minor/>
      <comment>lk: quest</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11874">In [[Christian mythology]], the '''Holy Grail''' was the [[cup]] from which [[Jesus Christ|Jesus]] drank at the [[Last Supper]], or alternatively a cup that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is believed by some to be a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Morte Darthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>kufnfwpn1jwjpfd2ryfr4dojpnpj1nc</sha1>
    </revision>
    <revision>
      <id>5878814</id>
      <parentid>5760405</parentid>
      <timestamp>2004-09-09T11:36:42Z</timestamp>
      <contributor>
        <username>Franey</username>
        <id>102802</id>
      </contributor>
      <comment>grail sometimes dish instead of cup</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11883">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]] which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is believed by some to be a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Morte Darthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>7utli46lag4iifqgmejzi3s5rmhkyec</sha1>
    </revision>
    <revision>
      <id>5890830</id>
      <parentid>5878814</parentid>
      <timestamp>2004-09-14T15:11:32Z</timestamp>
      <contributor>
        <username>Pablo X</username>
        <id>96604</id>
      </contributor>
      <minor/>
      <comment>/* Quest for the Grail */ linked [[Le Morte D'Arthur]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11903">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]] which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is believed by some to be a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other suviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>l7s8uwc64636uwatnncmbxp0t88p7dr</sha1>
    </revision>
    <revision>
      <id>6087015</id>
      <parentid>5890830</parentid>
      <timestamp>2004-09-15T00:42:22Z</timestamp>
      <contributor>
        <ip>24.147.122.99</ip>
      </contributor>
      <comment>/* Three medieval relics */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11904">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]] which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is believed by some to be a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other surviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>f8owj4dy77nehqiilg3qjjdu76l4cke</sha1>
    </revision>
    <revision>
      <id>6166408</id>
      <parentid>6087015</parentid>
      <timestamp>2004-09-23T03:07:48Z</timestamp>
      <contributor>
        <username>Kuralyov</username>
        <id>64439</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11935">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]] which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is believed by some to be a Gothic legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other surviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]

[[Category:Arthurian legend]]</text>
      <sha1>9lnrsr7u9gjpb08qude6ldd2whwsjzd</sha1>
    </revision>
    <revision>
      <id>6363392</id>
      <parentid>6166408</parentid>
      <timestamp>2004-09-26T16:13:54Z</timestamp>
      <contributor>
        <username>Ray Dassen</username>
        <id>99584</id>
      </contributor>
      <minor/>
      <comment>Wikilink 'Gothic'</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11945">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]] which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other surviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[Category:Christian mythology]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]

[[Category:Arthurian legend]]</text>
      <sha1>645d97pfy0duee22hlx9b4jgv7gawjj</sha1>
    </revision>
    <revision>
      <id>6440164</id>
      <parentid>6363392</parentid>
      <timestamp>2004-10-05T20:24:00Z</timestamp>
      <contributor>
        <username>Robbot</username>
        <id>25261</id>
      </contributor>
      <minor/>
      <comment>Andre Engels - robot  Adding:es</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11958">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]] which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. 

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below). 

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist. 

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century.  
#The other surviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.   

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]

[[Category:Arthurian legend]]
[[Category:Christian mythology]]</text>
      <sha1>6rku2mq0tam081blcbcde1f58dwr5kr</sha1>
    </revision>
    <revision>
      <id>6678523</id>
      <parentid>6440164</parentid>
      <timestamp>2004-10-09T00:38:35Z</timestamp>
      <contributor>
        <username>Tregoweth</username>
        <id>7402</id>
      </contributor>
      <minor/>
      <comment>[[Category:Alleged relics of Jesus Christ]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11964">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]] which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus Christ]]</text>
      <sha1>2i8dxaywvzfgu915tmfnv15xxhn2e60</sha1>
    </revision>
    <revision>
      <id>6723547</id>
      <parentid>6678523</parentid>
      <timestamp>2004-10-18T18:07:36Z</timestamp>
      <contributor>
        <ip>64.26.97.8</ip>
      </contributor>
      <comment>/* Fate of the Grail */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12128">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]] which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', late medieval writers, after the cycle of Grail romances was well established, identifying the cup of the Last Supper with the Grail, came up with a false etymology from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].  Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus Christ]]</text>
      <sha1>6v4qyusw32t0wwi0skestukyqrdwnq3</sha1>
    </revision>
    <revision>
      <id>6815115</id>
      <parentid>6723547</parentid>
      <timestamp>2004-10-20T07:52:54Z</timestamp>
      <contributor>
        <username>Toh</username>
        <id>106508</id>
      </contributor>
      <minor/>
      <comment>still an overlong sentence but perhaps less horrible</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12174">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]] which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].  Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus Christ]]</text>
      <sha1>4bh8coqo3qyll192d0rxowh7p8tmlt5</sha1>
    </revision>
    <revision>
      <id>6817942</id>
      <parentid>6815115</parentid>
      <timestamp>2004-10-24T03:25:29Z</timestamp>
      <contributor>
        <username>Neutrality</username>
        <id>68411</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12165">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]] which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].  Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>qg92iquiinvu1jmf9ihjxtbi85f3yu9</sha1>
    </revision>
    <revision>
      <id>7338524</id>
      <parentid>6817942</parentid>
      <timestamp>2004-10-24T06:20:35Z</timestamp>
      <contributor>
        <ip>12.222.198.39</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12166">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]], which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood.&quot;  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.
Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie,'' by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].  Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle,'' of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz,'' an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal.'' In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted,) that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]],''  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades.''  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]].&quot;

For the authors of ''[[Holy Blood, Holy Grail]],'' who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>7kpqr6wj72gxsmjn5hhl6ue6ymj43nt</sha1>
    </revision>
    <revision>
      <id>7338585</id>
      <parentid>7338524</parentid>
      <timestamp>2004-11-11T13:56:39Z</timestamp>
      <contributor>
        <username>PhilHibbs</username>
        <id>94120</id>
      </contributor>
      <minor/>
      <comment>Commas go OUTSIDE the quotes (see WP:Style)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12167">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]], which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York 2000).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between 1170 and 1212.

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].  Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' (1883), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in 1204. It was recorded there in 1610, but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about 1170, it was found in the mosque at [[Caesarea]] in 1101: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in 1147 with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in 1399, when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' (1975) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' (1922), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' (1974) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the 1994 episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>sj6eiz96ib2e6un1ct911yscda7r713</sha1>
    </revision>
    <revision>
      <id>7394034</id>
      <parentid>7338585</parentid>
      <timestamp>2004-11-11T13:59:11Z</timestamp>
      <contributor>
        <username>PhilHibbs</username>
        <id>94120</id>
      </contributor>
      <minor/>
      <comment>Link to years</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12223">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]], which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].  Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>15ynbu7waqjqxhijsjue3uj8syzxze3</sha1>
    </revision>
    <revision>
      <id>7394195</id>
      <parentid>7394034</parentid>
      <timestamp>2004-11-12T21:39:20Z</timestamp>
      <contributor>
        <ip>81.132.4.28</ip>
      </contributor>
      <comment>/* Related articles */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12237">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]], which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].  Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
load of crap

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>0tm4r78efvd5wxvihcxlhxb2zgh8ft6</sha1>
    </revision>
    <revision>
      <id>7563092</id>
      <parentid>7394195</parentid>
      <timestamp>2004-11-12T21:43:01Z</timestamp>
      <contributor>
        <username>Stephen Turner</username>
        <id>132007</id>
      </contributor>
      <comment>Revert vandalism by 81.132.4.28</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12223">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]], which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].  Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>15ynbu7waqjqxhijsjue3uj8syzxze3</sha1>
    </revision>
    <revision>
      <id>7563162</id>
      <parentid>7563092</parentid>
      <timestamp>2004-11-17T00:55:31Z</timestamp>
      <contributor>
        <ip>24.196.105.79</ip>
      </contributor>
      <comment>/* Casual metaphor */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12345">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]], which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].  Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve.  For instance, Briana Banks could be considered the &quot;holy grail of women because she works the cock so good.  Or, another example being [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>4w3u8xvh63ws7fikygpzmquv24krnn3</sha1>
    </revision>
    <revision>
      <id>7563226</id>
      <parentid>7563162</parentid>
      <timestamp>2004-11-17T00:58:08Z</timestamp>
      <contributor>
        <ip>221.198.74.111</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="17235">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]], which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].  Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve.  For instance, Briana Banks could be considered the &quot;holy grail of women because she works the cock so good.  Or, another example being [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
Hot English Website Navigate:

[http://www.8886665.com/01index.htm Denim &amp;amp; Jean Fabric]
[http://www.8886665.com/02index.htm Dental Hygiene]
[http://www.8886665.com/03index.htm Derivatives]
[http://www.8886665.com/04index.htm Designing Processing]
[http://www.8886665.com/05index.htm Detergent]
[http://www.8886665.com/06index.htm Diary]
[http://www.8886665.com/07index.htm Digital Photography]
[http://www.8886665.com/08index.htm Digital Voice Recorder]
[http://www.8886665.com/09index.htm Disabilities]
[http://www.8886665.com/10index.htm Dish Washer]
[http://www.8886665.com/11index.htm Disinfecting Cabinet]
[http://www.8886665.com/12index.htm Display]
[http://www.8886665.com/13index.htm Displays]
[http://www.8886665.com/14index.htm Disposable Batteries]
[http://www.8886665.com/15index.htm Diving]
[http://www.8886665.com/16index.htm Dolls]
[http://www.8886665.com/17index.htm Doorbell]
[http://www.8886665.com/18index.htm Doors &amp;amp; Windows]
[http://www.8886665.com/19index.htm Down Raw Materials]
[http://www.8886665.com/20index.htm Drainers]
[http://www.8886665.com/21index.htm Draught Fan]
[http://www.8886665.com/22index.htm Drawing]
[http://www.8886665.com/23index.htm Dried Fruit]
[http://www.8886665.com/24index.htm Drives]
[http://www.8886665.com/25index.htm Drugs]
[http://www.8886665.com/26index.htm Drums Pails] 
http://www.8886665.com/index.htm
http://www.8886665.com/products.htm
http://www.8886665.com/tuijian.htm
http://www.8886665.com/zhuyao.htm
http://www.8886665.com/shiyong.htm
http://www.8886665.com/jianjie.htm
http://www.8886665.com/rongyu.htm
http://www.8886665.com/lianxi.htm
[http://www.8886668.com/01index.htm Cotton Textile Materials]
[http://www.8886668.com/02index.htm Countertop]
[http://www.8886668.com/03index.htm Coupling]
[http://www.8886668.com/04index.htm Cover]
[http://www.8886668.com/05index.htm Craft Paper]
[http://www.8886668.com/06index.htm Crafts]
[http://www.8886668.com/07index.htm Crafts Gifts]
[http://www.8886668.com/08index.htm Crafts Stocks]
[http://www.8886668.com/09index.htm Crafts Textile]
[http://www.8886668.com/10index.htm Crates]
[http://www.8886668.com/11index.htm Crude Oil]
[http://www.8886668.com/12index.htm Crystal]
[http://www.8886668.com/13index.htm Crystal Vases]
[http://www.8886668.com/14index.htm Crystallized Glass Panel]
[http://www.8886668.com/15index.htm Cultures]
[http://www.8886668.com/16index.htm Curtain]
[http://www.8886668.com/17index.htm Cushion]
[http://www.8886668.com/18index.htm Cushioning Materials]
[http://www.8886668.com/19index.htm Cutting Tools]
[http://www.8886668.com/20index.htm Cylindrical Roller Bearing]
[http://www.8886668.com/21index.htm Daily Products Machinery]
[http://www.8886668.com/22index.htm Dairy Products]
[http://www.8886668.com/23index.htm Decoration]
[http://www.8886668.com/24index.htm Decorative Materials]
[http://www.8886668.com/25index.htm Deep Groove Ball Bearing]
[http://www.8886668.com/26index.htm Dehumidifier] 
http://www.8886668.com/index.htm
http://www.8886668.com/products.htm
http://www.8886668.com/tuijian.htm
http://www.8886668.com/zhuyao.htm
http://www.8886668.com/shiyong.htm
http://www.8886668.com/jianjie.htm
http://www.8886668.com/rongyu.htm
http://www.8886668.com/lianxi.htm
[http://www.8886669.com/01index.htm Conditioning]
[http://www.8886669.com/02index.htm Confectionery]
[http://www.8886669.com/03index.htm Conference System]
[http://www.8886669.com/04index.htm Connectors]
[http://www.8886669.com/05index.htm Connectors and Terminals]
[http://www.8886669.com/06index.htm Construction]
[http://www.8886669.com/07index.htm Construction Hardware]
[http://www.8886669.com/08index.htm Construction Machinery]
[http://www.8886669.com/09index.htm Construction Materials Stocks]
[http://www.8886669.com/10index.htm Consumable]
[http://www.8886669.com/11index.htm Consumables]
[http://www.8886669.com/12index.htm Consumer Electronics Production Lines]
[http://www.8886669.com/13index.htm Contact Materials]
[http://www.8886669.com/14index.htm Contactor]
[http://www.8886669.com/15index.htm Containers]
[http://www.8886669.com/16index.htm Converter]
[http://www.8886669.com/17index.htm Conveyor Belt]
[http://www.8886669.com/18index.htm Cooking Equipment]
[http://www.8886669.com/19index.htm Cooling System]
[http://www.8886669.com/20index.htm Copiers]
[http://www.8886669.com/21index.htm Copper Pipes]
[http://www.8886669.com/22index.htm Correction Pen]
[http://www.8886669.com/23index.htm Cosmetic Accessories]
[http://www.8886669.com/24index.htm Cosmetics]
[http://www.8886669.com/25index.htm Cosmetics Packaging]
[http://www.8886669.com/26index.htm Cotton Fabrics]
http://www.8886669.com/index.htm
http://www.8886669.com/products.htm
http://www.8886669.com/tuijian.htm
http://www.8886669.com/zhuyao.htm
http://www.8886669.com/shiyong.htm
http://www.8886669.com/jianjie.htm
http://www.8886669.com/rongyu.htm
http://www.8886669.com/lianxi.htm</text>
      <sha1>q395ejvoxefcvvgs783jkqnsrn5556n</sha1>
    </revision>
    <revision>
      <id>7563456</id>
      <parentid>7563226</parentid>
      <timestamp>2004-11-17T01:00:26Z</timestamp>
      <contributor>
        <username>Yelyos</username>
        <id>28559</id>
      </contributor>
      <comment>agh, linkspam</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12345">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]], which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].  Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve.  For instance, Briana Banks could be considered the &quot;holy grail of women because she works the cock so good.  Or, another example being [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>4w3u8xvh63ws7fikygpzmquv24krnn3</sha1>
    </revision>
    <revision>
      <id>7563575</id>
      <parentid>7563456</parentid>
      <timestamp>2004-11-17T01:07:33Z</timestamp>
      <contributor>
        <ip>24.196.105.79</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12977">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]], which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Ron Leonhardt==
This kid is the biggest deusche.  Ryan Jacobs worked his mom so good a a few nights ago that she ended up in the hospitol for four days for internal injuries, also known as the Mrs. Alms syndrome.  When asked about his concern for the dying Mrs Leonhardt, Ryan responded &quot; She was kinda a cold fish, if you know what I mean.&quot;  Ron leonhardt is a fagot. Currently he is seeing a young homosexual at Hononegah High School by the name of Tyler. Tyler has a chode and Ron likes to &quot;work it hell&quot;.  Ron likes it up the ass and enjoys massive gangbangs.  He has a fetish for being cummed on his face by large negro men.
==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].  Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve.  For instance, Briana Banks could be considered the &quot;holy grail of women because she works the cock so good.  Or, another example being [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>tumvnm8z1zts8yylvh4oq2wq3nfs1bv</sha1>
    </revision>
    <revision>
      <id>7563647</id>
      <parentid>7563575</parentid>
      <timestamp>2004-11-17T01:11:33Z</timestamp>
      <contributor>
        <username>Mendel</username>
        <id>55722</id>
      </contributor>
      <comment>rv vandalism by 24.196.105.79 to last by Yelyos</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12345">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]], which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].  Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve.  For instance, Briana Banks could be considered the &quot;holy grail of women because she works the cock so good.  Or, another example being [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>4w3u8xvh63ws7fikygpzmquv24krnn3</sha1>
    </revision>
    <revision>
      <id>7835807</id>
      <parentid>7563647</parentid>
      <timestamp>2004-11-17T01:14:34Z</timestamp>
      <contributor>
        <username>Mirv</username>
        <id>29678</id>
      </contributor>
      <comment>revert further</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12223">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]], which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].  Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>15ynbu7waqjqxhijsjue3uj8syzxze3</sha1>
    </revision>
    <revision>
      <id>7976752</id>
      <parentid>7835807</parentid>
      <timestamp>2004-11-25T04:04:42Z</timestamp>
      <contributor>
        <username>Jumbuck</username>
        <id>116385</id>
      </contributor>
      <minor/>
      <comment>robot  Adding:gl</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12237">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]], which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. The ultra-Catholic mystic [[Anne Catherine Emmerich]] mentions the Grail in her visions, detailed in a book, [http://www.gutenberg.net/etext/10866 ''The Dolorous Passion of Our Lord Jesus Christ''].  Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>gas7s02wrgi45nof6hikuig25nrsm1c</sha1>
    </revision>
    <revision>
      <id>7976785</id>
      <parentid>7976752</parentid>
      <timestamp>2004-11-30T04:21:43Z</timestamp>
      <contributor>
        <ip>65.10.8.77</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12037">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]], which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Three medieval relics==
During the Middle Ages, three major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>sjvwxxasqnk76saifs090yfe52o6uj3</sha1>
    </revision>
    <revision>
      <id>8179120</id>
      <parentid>7976785</parentid>
      <timestamp>2004-11-30T04:22:57Z</timestamp>
      <contributor>
        <ip>65.10.8.77</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12035">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]] or [[cup]], which [[Jesus Christ|Jesus]] used at the [[Last Supper]], or alternatively a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]], or sometimes both. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>3h4j4rd699lyir8t2s8672ivd8796ji</sha1>
    </revision>
    <revision>
      <id>8198913</id>
      <parentid>8179120</parentid>
      <timestamp>2004-12-06T12:07:04Z</timestamp>
      <contributor>
        <ip>195.70.48.242</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12492">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

The [[Holy Chalice]], the vessel which [[Jesus Christ|Jesus]] used at the [[Last Supper]] to serve the wine is mistakenly, but quite often identified with the Holy Grail. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still preserved at the [[spanish]] Cathedral of [[Valencia]]. The Holy Chalice has never been asssociated with supernatural powers, which superstition is apparently restricted to bloodshed-related relics, including the Holy Grail, the [[Spear of Destiny]] and the [[Holy Cross]].

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>4fyk7k7u9powebanmkdkjmkpqoygxq1</sha1>
    </revision>
    <revision>
      <id>8232232</id>
      <parentid>8198913</parentid>
      <timestamp>2004-12-07T02:29:48Z</timestamp>
      <contributor>
        <username>User2004</username>
        <id>85879</id>
      </contributor>
      <comment>+[[Category:Metaphors</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12515">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

The [[Holy Chalice]], the vessel which [[Jesus Christ|Jesus]] used at the [[Last Supper]] to serve the wine is mistakenly, but quite often identified with the Holy Grail. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still preserved at the [[spanish]] Cathedral of [[Valencia]]. The Holy Chalice has never been asssociated with supernatural powers, which superstition is apparently restricted to bloodshed-related relics, including the Holy Grail, the [[Spear of Destiny]] and the [[Holy Cross]].

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>mcgpxeoqrgnt6aaf7guyxckfq9xlb7h</sha1>
    </revision>
    <revision>
      <id>8298268</id>
      <parentid>8232232</parentid>
      <timestamp>2004-12-08T07:25:59Z</timestamp>
      <contributor>
        <username>Wetman</username>
        <id>21492</id>
      </contributor>
      <comment>removed &quot;mistakenly&quot; to preserve naeutral pov: Wikipedia takes no stand on authenticity of &quot;relics&quot;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12493">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

The [[Holy Chalice]], the vessel which [[Jesus Christ|Jesus]] used at the [[Last Supper]] to serve the wine is often identified with the Holy Grail. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still preserved at the [[spanish]] Cathedral of [[Valencia]]. The Holy Chalice has never been asssociated with supernatural powers, which superstition is apparently restricted to bloodshed-related relics, including the Holy Grail, the [[Spear of Destiny]] and the [[Holy Cross]].

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>9qel1oh1b3ytz9eoouisu0f484zav08</sha1>
    </revision>
    <revision>
      <id>8305695</id>
      <parentid>8298268</parentid>
      <timestamp>2004-12-10T13:59:35Z</timestamp>
      <contributor>
        <ip>156.63.169.2</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="11917">

The [[Holy Chalice]], the vessel which [[Jesus Christ|Jesus]] used at the [[Last Supper]] to serve the wine is often identified with the Holy Grail. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still preserved at the [[spanish]] Cathedral of [[Valencia]]. The Holy Chalice has never been asssociated with supernatural powers, which superstition is apparently restricted to bloodshed-related relics, including the Holy Grail, the [[Spear of Destiny]] and the [[Holy Cross]].

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>tczdl2gou5rjasy1ku23hxa1f3966ox</sha1>
    </revision>
    <revision>
      <id>8357848</id>
      <parentid>8305695</parentid>
      <timestamp>2004-12-10T19:42:03Z</timestamp>
      <contributor>
        <username>User2004</username>
        <id>85879</id>
      </contributor>
      <minor/>
      <comment>rv deletion</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12493">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

The [[Holy Chalice]], the vessel which [[Jesus Christ|Jesus]] used at the [[Last Supper]] to serve the wine is often identified with the Holy Grail. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still preserved at the [[spanish]] Cathedral of [[Valencia]]. The Holy Chalice has never been asssociated with supernatural powers, which superstition is apparently restricted to bloodshed-related relics, including the Holy Grail, the [[Spear of Destiny]] and the [[Holy Cross]].

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>9qel1oh1b3ytz9eoouisu0f484zav08</sha1>
    </revision>
    <revision>
      <id>8371072</id>
      <parentid>8357848</parentid>
      <timestamp>2004-12-12T07:06:07Z</timestamp>
      <contributor>
        <username>Jonathunder</username>
        <id>112889</id>
      </contributor>
      <minor/>
      <comment>simplify link</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12480">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught his blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

The [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine is often identified with the Holy Grail. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still preserved at the [[spanish]] Cathedral of [[Valencia]]. The Holy Chalice has never been asssociated with supernatural powers, which superstition is apparently restricted to bloodshed-related relics, including the Holy Grail, the [[Spear of Destiny]] and the [[Holy Cross]].

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>ayy5uagxzutitymzq21ge3vk30w348o</sha1>
    </revision>
    <revision>
      <id>8377279</id>
      <parentid>8371072</parentid>
      <timestamp>2004-12-12T20:54:27Z</timestamp>
      <contributor>
        <ip>81.178.88.138</ip>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12483">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this.

The [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine is often identified with the Holy Grail. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still preserved at the [[spanish]] Cathedral of [[Valencia]]. The Holy Chalice has never been asssociated with supernatural powers, which superstition is apparently restricted to bloodshed-related relics, including the Holy Grail, the [[Spear of Destiny]] and the [[Holy Cross]].

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>f8ghj7xwmgk3sbq05s256ler8hheuji</sha1>
    </revision>
    <revision>
      <id>8390281</id>
      <parentid>8377279</parentid>
      <timestamp>2004-12-13T00:09:56Z</timestamp>
      <contributor>
        <username>User2004</username>
        <id>85879</id>
      </contributor>
      <comment>the graf on the Holy Chalice was distracting and duplicates the already good article. kept topic sentence and merged with intro</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12157">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. The Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine is often identified with the Holy Grail. 

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>hw58nh1egy0rstjezeyrk06r5mqglni</sha1>
    </revision>
    <revision>
      <id>8488859</id>
      <parentid>8390281</parentid>
      <timestamp>2004-12-13T09:00:30Z</timestamp>
      <contributor>
        <username>User2004</username>
        <id>85879</id>
      </contributor>
      <minor/>
      <comment>duplicate clause</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12117">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. The Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine. 

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iranian]] origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>9dypvllxi03m0xi3oyuuad6k36i85fn</sha1>
    </revision>
    <revision>
      <id>8501719</id>
      <parentid>8488859</parentid>
      <timestamp>2004-12-16T14:39:00Z</timestamp>
      <contributor>
        <username>Pouya</username>
        <id>129176</id>
      </contributor>
      <minor/>
      <comment>srd</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12117">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. The Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine. 

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iran]]ian origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]</text>
      <sha1>4wzbxnmdale90qx4ulxqslo4hxhtez0</sha1>
    </revision>
    <revision>
      <id>8958989</id>
      <parentid>8501719</parentid>
      <timestamp>2004-12-16T23:06:46Z</timestamp>
      <contributor>
        <username>Bogdangiusca</username>
        <id>9475</id>
      </contributor>
      <minor/>
      <comment>[[ro:Graal]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12130">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. The Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine. 

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iran]]ian origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the &quot;real&quot; Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the &quot;true&quot; story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[ro:Graal]]</text>
      <sha1>eeiwlvxpzhrvbfdic2j1tzq2ix4qpo2</sha1>
    </revision>
    <revision>
      <id>9134632</id>
      <parentid>8958989</parentid>
      <timestamp>2004-12-30T22:07:55Z</timestamp>
      <contributor>
        <ip>83.250.81.166</ip>
      </contributor>
      <comment>/* Modern retellings */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12126">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. The Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine. 

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iran]]ian origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[ro:Graal]]</text>
      <sha1>kh8tnhjk7aikqtk6ohq6jwuxk47nv4b</sha1>
    </revision>
    <revision>
      <id>9134641</id>
      <parentid>9134632</parentid>
      <timestamp>2005-01-05T23:12:49Z</timestamp>
      <contributor>
        <username>DonQuixote</username>
        <id>141159</id>
      </contributor>
      <minor/>
      <comment>added Further Reading</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12328">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. The Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine. 

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iran]]ian origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==Further Reading==
*The Grail: From Celtic Myth to Christian Symbol by Roger Sherman Loomis ISBN 0691020752
*The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed by Malcolm Godwin ISBM 0670851280
==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[ro:Graal]]</text>
      <sha1>7jan78j9b50lf6dwcpgloj2jxpuqujj</sha1>
    </revision>
    <revision>
      <id>9134684</id>
      <parentid>9134641</parentid>
      <timestamp>2005-01-05T23:13:16Z</timestamp>
      <contributor>
        <username>DonQuixote</username>
        <id>141159</id>
      </contributor>
      <minor/>
      <comment>/* Further Reading */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12337">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. The Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine. 

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iran]]ian origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBM 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[ro:Graal]]</text>
      <sha1>g5c5fjerc4ye54z3thcjm9vtg55jb26</sha1>
    </revision>
    <revision>
      <id>9135643</id>
      <parentid>9134684</parentid>
      <timestamp>2005-01-05T23:14:14Z</timestamp>
      <contributor>
        <username>DonQuixote</username>
        <id>141159</id>
      </contributor>
      <minor/>
      <comment>/* Further Reading */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12337">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. The Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine. 

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established in identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iran]]ian origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[ro:Graal]]</text>
      <sha1>oh0pft3h0vd3ke5siktp8t96lgt49cg</sha1>
    </revision>
    <revision>
      <id>9147618</id>
      <parentid>9135643</parentid>
      <timestamp>2005-01-05T23:51:41Z</timestamp>
      <contributor>
        <username>Wetman</username>
        <id>21492</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12753">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the practice: the [[Holy Chalice]], the vessel which [[Jesus Christ|Jesus]] used at the [[Last Supper]] to serve the wine is often identified with the Holy Grail. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The Grail legend is believed by some to be a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Also the Legends of King Arthur, the Knights of the Round Table and the [[Holy Grail]] are believed by some groups of scholars to be of [[Scythian]] [[Iran]]ian origin. (Sea Scott Littleton,C.: From Scythia to Camelot, New York [[2000]]).

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century).There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[ro:Graal]]</text>
      <sha1>3lxf506hv2w3olf84fmhm4l4zcotuar</sha1>
    </revision>
    <revision>
      <id>9236713</id>
      <parentid>9147618</parentid>
      <timestamp>2005-01-06T11:09:17Z</timestamp>
      <contributor>
        <username>Wetman</username>
        <id>21492</id>
      </contributor>
      <comment>removed a &quot;believed by some&quot; removed Scythian agenda (not Grail-connected)</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12436">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
The legend that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles made its appearance in a verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like [[Percivale]] or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[ro:Graal]]</text>
      <sha1>p8pcghzn7ybuyqfch4d9yzw068vy3nf</sha1>
    </revision>
    <revision>
      <id>9244451</id>
      <parentid>9236713</parentid>
      <timestamp>2005-01-09T20:59:19Z</timestamp>
      <contributor>
        <username>Llywrch</username>
        <id>5094</id>
      </contributor>
      <comment>correcting earliest mentions</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12723">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[ro:Graal]]</text>
      <sha1>bwfhkxw6vgyq4phykr39lbmd96dhfyd</sha1>
    </revision>
    <revision>
      <id>9347882</id>
      <parentid>9244451</parentid>
      <timestamp>2005-01-10T02:40:43Z</timestamp>
      <contributor>
        <ip>200.102.74.51</ip>
      </contributor>
      <comment>[[pt:Santo Graal]]</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12742">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>2vmh4ya5m4s7oqftw93epkbnbho3w1q</sha1>
    </revision>
    <revision>
      <id>9353044</id>
      <parentid>9347882</parentid>
      <timestamp>2005-01-14T02:29:00Z</timestamp>
      <contributor>
        <ip>68.221.122.6</ip>
      </contributor>
      <comment>/* Four medieval relics */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12738">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>hwpy26ms1zs8ocoxtcg6rd18u9j2d5b</sha1>
    </revision>
    <revision>
      <id>9387280</id>
      <parentid>9353044</parentid>
      <timestamp>2005-01-14T06:01:32Z</timestamp>
      <contributor>
        <username>Wetman</username>
        <id>21492</id>
      </contributor>
      <comment>&quot;During the Middle Ages&quot; not &quot;During Middle Ages&quot; is the idiom in English,</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12742">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail
*[http://www.boydell.co.uk/www.holygrail.ws/grails.html Details of three medieval relics associated with the Holy Grail]
[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>2vmh4ya5m4s7oqftw93epkbnbho3w1q</sha1>
    </revision>
    <revision>
      <id>9387846</id>
      <parentid>9387280</parentid>
      <timestamp>2005-01-15T18:50:58Z</timestamp>
      <contributor>
        <username>Pjacobi</username>
        <id>84141</id>
      </contributor>
      <comment>/* External links */  deleted link which doesn't work</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12622">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]] or [[cup]], a vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>t6hakcpvcdl90ua593rf2udc7vtlbh2</sha1>
    </revision>
    <revision>
      <id>9388114</id>
      <parentid>9387846</parentid>
      <timestamp>2005-01-15T19:11:21Z</timestamp>
      <contributor>
        <username>Twobitsprite</username>
        <id>162241</id>
      </contributor>
      <comment>&quot;the dish, plate or cup, a vessel&quot; -&gt; &quot;the dish, plate, cup or vessel&quot;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12620">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]], [[cup]] or vessel that [[Alleged relics of Jesus Christ|caught Jesus' blood during his crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[quest]] for the Holy Grail.  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>0e945bksvrmbqlgcb1psxj3ad41jsu8</sha1>
    </revision>
    <revision>
      <id>9413427</id>
      <parentid>9388114</parentid>
      <timestamp>2005-01-15T19:23:26Z</timestamp>
      <contributor>
        <username>Twobitsprite</username>
        <id>162241</id>
      </contributor>
      <comment>moved wiki link to Alleged_relics_of_Jesus_Christ to bottom and fixed beginning wiki tags for relevance.</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12669">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]], [[cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants.

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>8mdb06gcpsb8k0886i9v4cr318fuh01</sha1>
    </revision>
    <revision>
      <id>9471031</id>
      <parentid>9413427</parentid>
      <timestamp>2005-01-16T19:17:37Z</timestamp>
      <contributor>
        <ip>129.177.138.249</ip>
      </contributor>
      <comment>/* Modern retellings */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13278">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]], [[cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>dvq4cpnt445d87fxnws97eew8gh4d7n</sha1>
    </revision>
    <revision>
      <id>9471082</id>
      <parentid>9471031</parentid>
      <timestamp>2005-01-19T01:02:00Z</timestamp>
      <contributor>
        <ip>24.225.178.209</ip>
      </contributor>
      <comment>/* Fate of the Grail */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="12608">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]], [[cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.



A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>78o3pb8zvf8jlrd9nth71l41fmx6lbg</sha1>
    </revision>
    <revision>
      <id>9597161</id>
      <parentid>9471082</parentid>
      <timestamp>2005-01-19T01:03:49Z</timestamp>
      <contributor>
        <username>Aranel</username>
        <id>90651</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/24.225.178.209|24.225.178.209]] to last version by 129.177.138.249</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13278">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate]], [[cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>dvq4cpnt445d87fxnws97eew8gh4d7n</sha1>
    </revision>
    <revision>
      <id>9614311</id>
      <parentid>9597161</parentid>
      <timestamp>2005-01-23T23:50:57Z</timestamp>
      <contributor>
        <username>Elf</username>
        <id>40082</id>
      </contributor>
      <minor/>
      <comment>dab plate</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13295">In [[Christian mythology]], the '''Holy Grail''' was the [[dish]], [[plate (dishware)|plate]], [[cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>jbgkfswpbvij61j7x9986qdisvt477d</sha1>
    </revision>
    <revision>
      <id>9691423</id>
      <parentid>9614311</parentid>
      <timestamp>2005-01-24T13:30:29Z</timestamp>
      <contributor>
        <username>Sfdan</username>
        <id>3464</id>
      </contributor>
      <minor/>
      <comment>Fix links</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13314">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Morte D' Arthur]]'' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>3nw4wjs8izgo0u0wazwflufsklpj1bj</sha1>
    </revision>
    <revision>
      <id>9784652</id>
      <parentid>9691423</parentid>
      <timestamp>2005-01-27T02:19:33Z</timestamp>
      <contributor>
        <ip>66.205.134.150</ip>
      </contributor>
      <comment>/* Quest for the Grail */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13350">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at '''[[Byzantium]]'''. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Byzantium to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>dg5xcz9q8wixrribdnfhh0twetd5jsy</sha1>
    </revision>
    <revision>
      <id>9785264</id>
      <parentid>9784652</parentid>
      <timestamp>2005-01-30T04:33:13Z</timestamp>
      <contributor>
        <username>Adam Bishop</username>
        <id>13008</id>
      </contributor>
      <comment>/* Four medieval relics */ Constantinople, not Byzantium</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13354">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>86ktx3wvaoi52vz72y9k4vu3m46o7y2</sha1>
    </revision>
    <revision>
      <id>9785282</id>
      <parentid>9785264</parentid>
      <timestamp>2005-01-30T05:04:12Z</timestamp>
      <contributor>
        <ip>204.87.191.88</ip>
      </contributor>
      <comment>/* Further Reading */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13145">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]


==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>gdibilimd3dyubm0wsuz3hzi8640ytg</sha1>
    </revision>
    <revision>
      <id>9795616</id>
      <parentid>9785282</parentid>
      <timestamp>2005-01-30T05:05:12Z</timestamp>
      <contributor>
        <username>Frazzydee</username>
        <id>22631</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/204.87.191.88|204.87.191.88]] to last version by Adam Bishop</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13354">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>86ktx3wvaoi52vz72y9k4vu3m46o7y2</sha1>
    </revision>
    <revision>
      <id>9801534</id>
      <parentid>9795616</parentid>
      <timestamp>2005-01-30T15:12:28Z</timestamp>
      <contributor>
        <username>Brian0918</username>
        <id>90640</id>
      </contributor>
      <comment>/* Four medieval relics */  fix typo -- perforate is the correct adjective, never perforated</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13353">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforate lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>42pvkqbl1dqzx5g6bcxhr8yytehk2yc</sha1>
    </revision>
    <revision>
      <id>9948311</id>
      <parentid>9801534</parentid>
      <timestamp>2005-01-30T19:46:36Z</timestamp>
      <contributor>
        <username>Curps</username>
        <id>44727</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/Brian0918|Brian0918]] to last version by Frazzydee</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13354">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>86ktx3wvaoi52vz72y9k4vu3m46o7y2</sha1>
    </revision>
    <revision>
      <id>9948327</id>
      <parentid>9948311</parentid>
      <timestamp>2005-02-04T21:39:18Z</timestamp>
      <contributor>
        <ip>65.49.69.72</ip>
      </contributor>
      <comment>/* Fate of the Grail */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13375">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
Is this really True! While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>cbuhc74pl1vjbeetqcx4f826x77yigp</sha1>
    </revision>
    <revision>
      <id>9948482</id>
      <parentid>9948327</parentid>
      <timestamp>2005-02-04T21:39:47Z</timestamp>
      <contributor>
        <ip>65.49.69.72</ip>
      </contributor>
      <comment>/* Fate of the Grail */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13390">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail Is Really True==
Is this really True! While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>fr7fcl1w9sno1m3jmj35zk3lreboq2v</sha1>
    </revision>
    <revision>
      <id>10011471</id>
      <parentid>9948482</parentid>
      <timestamp>2005-02-04T21:46:11Z</timestamp>
      <contributor>
        <username>Mirv</username>
        <id>29678</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/65.49.69.72|65.49.69.72]] to last version by Curps</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="13354">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Fate of the Grail==
While the Grail first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

==Quest for the Grail==
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

==Four medieval relics==
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Casual metaphor==
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

==Modern retellings==
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>86ktx3wvaoi52vz72y9k4vu3m46o7y2</sha1>
    </revision>
    <revision>
      <id>10011532</id>
      <parentid>10011471</parentid>
      <timestamp>2005-02-06T22:23:05Z</timestamp>
      <contributor>
        <username>DonQuixote</username>
        <id>141159</id>
      </contributor>
      <comment>added &quot;Origins of the Grail&quot; and re-organized rest into &quot;Grail Canon&quot; and &quot;Modern Interpretations&quot;</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="15192">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Origins of the Grail==
===Early Forms of the Grail===
The origins of the Grail can be traced back to early [[Celt|Celtic]] lore involving a hero/traveller who finds himself within an &quot;other world&quot;, one that is on a magical plain parallel to ours.  The transition from one world to another is usually described subtly, such as an unnoticeable and gradual change in the scenery.  The role of the Grail was simply as a platter, or dish, that would never go empty and be presented to signify the mystical nature of the other world.
===The Grail and the Fisher King===
The tale of the [[Fisher King]] involves a king who is lame in one leg (a euphemism for impotency) which in turn causes the land to become barren (infertile).  The hero ([[Gawain]], [[Percival]], or [[Galahad]]) encounters the Fisher King and is invited to a feast, as per the older other world tales.  The Grail is again presented as a platter of plenty but is also presented as part of a series of mystical relics, which also included a spear that dripped blood and a broken sword.  The purpose of the relics was to incite the hero to question them and thereby, through some unknown means, break the enchantment of the infirmed king and the barren land, although the hero invariable fails to do so.
===The Grail and Arthurian Legend===
The story of the Fisher King and the Grail was later incorporated into the [[Matter of Britain|Arthurian myths]].  At first presented as a retelling of the older Fisher King tale--for example, one telling involved Percival encountering the Fisher King and the Grail before arriving at Camelot, it eventually evolved into an explicit &quot;quest&quot; for the Grail--one such quest ending with twelve knights (of undetermined origin) ascending into Heaven along with the Grail.

==The Grail Canon==
===Fate of the Grail===
While the Grail formally first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

===Quest for the Grail===
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

===Four medieval relics===
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Modern Interpretations==
===Casual metaphor===
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

===Modern retellings===
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>mhaiil8t3c43qvrkrjjzyspzn5jre55</sha1>
    </revision>
    <revision>
      <id>10013318</id>
      <parentid>10011532</parentid>
      <timestamp>2005-02-06T22:25:29Z</timestamp>
      <contributor>
        <username>DonQuixote</username>
        <id>141159</id>
      </contributor>
      <minor/>
      <comment>/* The Grail and the Fisher King */  copyedit</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="15190">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Origins of the Grail==
===Early Forms of the Grail===
The origins of the Grail can be traced back to early [[Celt|Celtic]] lore involving a hero/traveller who finds himself within an &quot;other world&quot;, one that is on a magical plain parallel to ours.  The transition from one world to another is usually described subtly, such as an unnoticeable and gradual change in the scenery.  The role of the Grail was simply as a platter, or dish, that would never go empty and be presented to signify the mystical nature of the other world.
===The Grail and the Fisher King===
The tale of the [[Fisher King]] involves a king who is lame in one leg (a euphemism for impotency) which in turn causes the land to become barren (infertile).  The hero ([[Gawain]], [[Percival]], or [[Galahad]]) encounters the Fisher King and is invited to a feast, as per the older other world tales.  The Grail is again presented as a platter of plenty but is also presented as part of a series of mystical relics, which also included a spear that drips blood and a broken sword.  The purpose of the relics is to incite the hero to question them and thereby, through some unknown means, break the enchantment of the infirmed king and the barren land, although the hero invariable fails to do so.

===The Grail and Arthurian Legend===
The story of the Fisher King and the Grail was later incorporated into the [[Matter of Britain|Arthurian myths]].  At first presented as a retelling of the older Fisher King tale--for example, one telling involved Percival encountering the Fisher King and the Grail before arriving at Camelot, it eventually evolved into an explicit &quot;quest&quot; for the Grail--one such quest ending with twelve knights (of undetermined origin) ascending into Heaven along with the Grail.

==The Grail Canon==
===Fate of the Grail===
While the Grail formally first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

===Quest for the Grail===
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

===Four medieval relics===
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Modern Interpretations==
===Casual metaphor===
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

===Modern retellings===
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>8t72xlvicmzwhpv4dm2r6v2ut4wxwlm</sha1>
    </revision>
    <revision>
      <id>10013396</id>
      <parentid>10013318</parentid>
      <timestamp>2005-02-06T23:34:36Z</timestamp>
      <contributor>
        <ip>24.42.72.5</ip>
      </contributor>
      <comment>/* Early Forms of the Grail */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="15251">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Origins of the Grail==
===Early Forms of the Grail===
The origins of the Grail can be traced back to early [[Celt|Celtic]] lore involving a hero/traveller who finds himself within an &quot;other world&quot;, one that is on a magical plain parallel to ours.  The transition from one world to another is usually described subtly, such as an unnoticeable and gradual change in the scenery. The Holy Grail was found by [[Macguyver]] in the late 1980s  The role of the Grail was simply as a platter, or dish, that would never go empty and be presented to signify the mystical nature of the other world.

===The Grail and the Fisher King===
The tale of the [[Fisher King]] involves a king who is lame in one leg (a euphemism for impotency) which in turn causes the land to become barren (infertile).  The hero ([[Gawain]], [[Percival]], or [[Galahad]]) encounters the Fisher King and is invited to a feast, as per the older other world tales.  The Grail is again presented as a platter of plenty but is also presented as part of a series of mystical relics, which also included a spear that drips blood and a broken sword.  The purpose of the relics is to incite the hero to question them and thereby, through some unknown means, break the enchantment of the infirmed king and the barren land, although the hero invariable fails to do so.

===The Grail and Arthurian Legend===
The story of the Fisher King and the Grail was later incorporated into the [[Matter of Britain|Arthurian myths]].  At first presented as a retelling of the older Fisher King tale--for example, one telling involved Percival encountering the Fisher King and the Grail before arriving at Camelot, it eventually evolved into an explicit &quot;quest&quot; for the Grail--one such quest ending with twelve knights (of undetermined origin) ascending into Heaven along with the Grail.

==The Grail Canon==
===Fate of the Grail===
While the Grail formally first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

===Quest for the Grail===
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

===Four medieval relics===
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Modern Interpretations==
===Casual metaphor===
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

===Modern retellings===
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>84jxsmxrvpgo2xujps3yk7ihiebj76s</sha1>
    </revision>
    <revision>
      <id>10013437</id>
      <parentid>10013396</parentid>
      <timestamp>2005-02-06T23:37:12Z</timestamp>
      <contributor>
        <ip>24.42.72.5</ip>
      </contributor>
      <comment>/* Early Forms of the Grail */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="15252">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Origins of the Grail==
===Early Forms of the Grail===
The origins of the Grail can be traced back to early [[Celt|Celtic]] lore involving a hero/traveller who finds himself within an &quot;other world&quot;, one that is on a magical plain parallel to ours.  The transition from one world to another is usually described subtly, such as an unnoticeable and gradual change in the scenery. The Holy Grail was found by [[MACGYVER]] in the early 1990s.  The role of the Grail was simply as a platter, or dish, that would never go empty and be presented to signify the mystical nature of the other world.

===The Grail and the Fisher King===
The tale of the [[Fisher King]] involves a king who is lame in one leg (a euphemism for impotency) which in turn causes the land to become barren (infertile).  The hero ([[Gawain]], [[Percival]], or [[Galahad]]) encounters the Fisher King and is invited to a feast, as per the older other world tales.  The Grail is again presented as a platter of plenty but is also presented as part of a series of mystical relics, which also included a spear that drips blood and a broken sword.  The purpose of the relics is to incite the hero to question them and thereby, through some unknown means, break the enchantment of the infirmed king and the barren land, although the hero invariable fails to do so.

===The Grail and Arthurian Legend===
The story of the Fisher King and the Grail was later incorporated into the [[Matter of Britain|Arthurian myths]].  At first presented as a retelling of the older Fisher King tale--for example, one telling involved Percival encountering the Fisher King and the Grail before arriving at Camelot, it eventually evolved into an explicit &quot;quest&quot; for the Grail--one such quest ending with twelve knights (of undetermined origin) ascending into Heaven along with the Grail.

==The Grail Canon==
===Fate of the Grail===
While the Grail formally first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

===Quest for the Grail===
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

===Four medieval relics===
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Modern Interpretations==
===Casual metaphor===
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

===Modern retellings===
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>t8anpa1t9ojqjqaicmuc0slssxmyz0g</sha1>
    </revision>
    <revision>
      <id>10013461</id>
      <parentid>10013437</parentid>
      <timestamp>2005-02-06T23:38:55Z</timestamp>
      <contributor>
        <ip>24.42.72.5</ip>
      </contributor>
      <comment>/* Early Forms of the Grail */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="15252">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Origins of the Grail==
===Early Forms of the Grail===
The origins of the Grail can be traced back to early [[Celt|Celtic]] lore involving a hero/traveller who finds himself within an &quot;other world&quot;, one that is on a magical plain parallel to ours.  The transition from one world to another is usually described subtly, such as an unnoticeable and gradual change in the scenery. The Holy Grail was found by [[MaCGyver]] in the early 1990s.  The role of the Grail was simply as a platter, or dish, that would never go empty and be presented to signify the mystical nature of the other world.

===The Grail and the Fisher King===
The tale of the [[Fisher King]] involves a king who is lame in one leg (a euphemism for impotency) which in turn causes the land to become barren (infertile).  The hero ([[Gawain]], [[Percival]], or [[Galahad]]) encounters the Fisher King and is invited to a feast, as per the older other world tales.  The Grail is again presented as a platter of plenty but is also presented as part of a series of mystical relics, which also included a spear that drips blood and a broken sword.  The purpose of the relics is to incite the hero to question them and thereby, through some unknown means, break the enchantment of the infirmed king and the barren land, although the hero invariable fails to do so.

===The Grail and Arthurian Legend===
The story of the Fisher King and the Grail was later incorporated into the [[Matter of Britain|Arthurian myths]].  At first presented as a retelling of the older Fisher King tale--for example, one telling involved Percival encountering the Fisher King and the Grail before arriving at Camelot, it eventually evolved into an explicit &quot;quest&quot; for the Grail--one such quest ending with twelve knights (of undetermined origin) ascending into Heaven along with the Grail.

==The Grail Canon==
===Fate of the Grail===
While the Grail formally first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

===Quest for the Grail===
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

===Four medieval relics===
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Modern Interpretations==
===Casual metaphor===
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

===Modern retellings===
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>0ynsk1sjep5nnuutkgzp7n7jj0xjrg9</sha1>
    </revision>
    <revision>
      <id>10014489</id>
      <parentid>10013461</parentid>
      <timestamp>2005-02-06T23:39:44Z</timestamp>
      <contributor>
        <ip>24.42.72.5</ip>
      </contributor>
      <comment>/* Early Forms of the Grail */</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="15252">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Origins of the Grail==
===Early Forms of the Grail===
The origins of the Grail can be traced back to early [[Celt|Celtic]] lore involving a hero/traveller who finds himself within an &quot;other world&quot;, one that is on a magical plain parallel to ours.  The transition from one world to another is usually described subtly, such as an unnoticeable and gradual change in the scenery. The Holy Grail was found by [[MacGyver]] in the early 1990s.  The role of the Grail was simply as a platter, or dish, that would never go empty and be presented to signify the mystical nature of the other world.

===The Grail and the Fisher King===
The tale of the [[Fisher King]] involves a king who is lame in one leg (a euphemism for impotency) which in turn causes the land to become barren (infertile).  The hero ([[Gawain]], [[Percival]], or [[Galahad]]) encounters the Fisher King and is invited to a feast, as per the older other world tales.  The Grail is again presented as a platter of plenty but is also presented as part of a series of mystical relics, which also included a spear that drips blood and a broken sword.  The purpose of the relics is to incite the hero to question them and thereby, through some unknown means, break the enchantment of the infirmed king and the barren land, although the hero invariable fails to do so.

===The Grail and Arthurian Legend===
The story of the Fisher King and the Grail was later incorporated into the [[Matter of Britain|Arthurian myths]].  At first presented as a retelling of the older Fisher King tale--for example, one telling involved Percival encountering the Fisher King and the Grail before arriving at Camelot, it eventually evolved into an explicit &quot;quest&quot; for the Grail--one such quest ending with twelve knights (of undetermined origin) ascending into Heaven along with the Grail.

==The Grail Canon==
===Fate of the Grail===
While the Grail formally first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

===Quest for the Grail===
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

===Four medieval relics===
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Modern Interpretations==
===Casual metaphor===
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

===Modern retellings===
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>je63smjmu8m8u0fhyc0asve7v6x905f</sha1>
    </revision>
    <revision>
      <id>10034450</id>
      <parentid>10014489</parentid>
      <timestamp>2005-02-07T00:02:05Z</timestamp>
      <contributor>
        <username>Wetman</username>
        <id>21492</id>
      </contributor>
      <comment>rv anon. comedy to late edit by Don Quixote</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="15190">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Origins of the Grail==
===Early Forms of the Grail===
The origins of the Grail can be traced back to early [[Celt|Celtic]] lore involving a hero/traveller who finds himself within an &quot;other world&quot;, one that is on a magical plain parallel to ours.  The transition from one world to another is usually described subtly, such as an unnoticeable and gradual change in the scenery.  The role of the Grail was simply as a platter, or dish, that would never go empty and be presented to signify the mystical nature of the other world.
===The Grail and the Fisher King===
The tale of the [[Fisher King]] involves a king who is lame in one leg (a euphemism for impotency) which in turn causes the land to become barren (infertile).  The hero ([[Gawain]], [[Percival]], or [[Galahad]]) encounters the Fisher King and is invited to a feast, as per the older other world tales.  The Grail is again presented as a platter of plenty but is also presented as part of a series of mystical relics, which also included a spear that drips blood and a broken sword.  The purpose of the relics is to incite the hero to question them and thereby, through some unknown means, break the enchantment of the infirmed king and the barren land, although the hero invariable fails to do so.

===The Grail and Arthurian Legend===
The story of the Fisher King and the Grail was later incorporated into the [[Matter of Britain|Arthurian myths]].  At first presented as a retelling of the older Fisher King tale--for example, one telling involved Percival encountering the Fisher King and the Grail before arriving at Camelot, it eventually evolved into an explicit &quot;quest&quot; for the Grail--one such quest ending with twelve knights (of undetermined origin) ascending into Heaven along with the Grail.

==The Grail Canon==
===Fate of the Grail===
While the Grail formally first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

===Quest for the Grail===
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

===Four medieval relics===
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Modern Interpretations==
===Casual metaphor===
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

===Modern retellings===
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>8t72xlvicmzwhpv4dm2r6v2ut4wxwlm</sha1>
    </revision>
    <revision>
      <id>10182511</id>
      <parentid>10034450</parentid>
      <timestamp>2005-02-07T15:49:55Z</timestamp>
      <contributor>
        <username>Nk</username>
        <id>107440</id>
      </contributor>
      <minor/>
      <comment>+bg</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="15276">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Origins of the Grail==
===Early Forms of the Grail===
The origins of the Grail can be traced back to early [[Celt|Celtic]] lore involving a hero/traveller who finds himself within an &quot;other world&quot;, one that is on a magical plain parallel to ours.  The transition from one world to another is usually described subtly, such as an unnoticeable and gradual change in the scenery.  The role of the Grail was simply as a platter, or dish, that would never go empty and be presented to signify the mystical nature of the other world.
===The Grail and the Fisher King===
The tale of the [[Fisher King]] involves a king who is lame in one leg (a euphemism for impotency) which in turn causes the land to become barren (infertile).  The hero ([[Gawain]], [[Percival]], or [[Galahad]]) encounters the Fisher King and is invited to a feast, as per the older other world tales.  The Grail is again presented as a platter of plenty but is also presented as part of a series of mystical relics, which also included a spear that drips blood and a broken sword.  The purpose of the relics is to incite the hero to question them and thereby, through some unknown means, break the enchantment of the infirmed king and the barren land, although the hero invariable fails to do so.

===The Grail and Arthurian Legend===
The story of the Fisher King and the Grail was later incorporated into the [[Matter of Britain|Arthurian myths]].  At first presented as a retelling of the older Fisher King tale--for example, one telling involved Percival encountering the Fisher King and the Grail before arriving at Camelot, it eventually evolved into an explicit &quot;quest&quot; for the Grail--one such quest ending with twelve knights (of undetermined origin) ascending into Heaven along with the Grail.

==The Grail Canon==
===Fate of the Grail===
While the Grail formally first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

===Quest for the Grail===
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

===Four medieval relics===
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Modern Interpretations==
===Casual metaphor===
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

===Modern retellings===
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[bg:&amp;#1057;&amp;#1074;&amp;#1077;&amp;#1097;&amp;#1077;&amp;#1085; &amp;#1043;&amp;#1088;&amp;#1072;&amp;#1072;&amp;#1083;]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>j6rvly4ra8pbeph1mvu3wah51yb5y4y</sha1>
    </revision>
    <revision>
      <id>10182655</id>
      <parentid>10182511</parentid>
      <timestamp>2005-02-12T04:11:46Z</timestamp>
      <contributor>
        <username>Lords Page</username>
        <id>190229</id>
      </contributor>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="17201">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Origins of the Grail==
===Early Forms of the Grail===
The origins of the Grail can be traced back to early [[Celt|Celtic]] lore involving a hero/traveller who finds himself within an &quot;other world&quot;, one that is on a magical plain parallel to ours.  The transition from one world to another is usually described subtly, such as an unnoticeable and gradual change in the scenery.  The role of the Grail was simply as a platter, or dish, that would never go empty and be presented to signify the mystical nature of the other world.
===The Grail and the Fisher King===
The tale of the [[Fisher King]] involves a king who is lame in one leg (a euphemism for impotency) which in turn causes the land to become barren (infertile).  The hero ([[Gawain]], [[Percival]], or [[Galahad]]) encounters the Fisher King and is invited to a feast, as per the older other world tales.  The Grail is again presented as a platter of plenty but is also presented as part of a series of mystical relics, which also included a spear that drips blood and a broken sword.  The purpose of the relics is to incite the hero to question them and thereby, through some unknown means, break the enchantment of the infirmed king and the barren land, although the hero invariable fails to do so.

===The Grail and Arthurian Legend===
The story of the Fisher King and the Grail was later incorporated into the [[Matter of Britain|Arthurian myths]].  At first presented as a retelling of the older Fisher King tale--for example, one telling involved Percival encountering the Fisher King and the Grail before arriving at Camelot, it eventually evolved into an explicit &quot;quest&quot; for the Grail--one such quest ending with twelve knights (of undetermined origin) ascending into Heaven along with the Grail.

==The Grail Canon==
===Fate of the Grail===
While the Grail formally first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

===Quest for the Grail===
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

===Four medieval relics===
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Modern Interpretations==
===Casual metaphor===
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

===Modern retellings===
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

HOLY GRAIL REALITY

The Holy Grail is an actual real thing - a part of larger ritual that only
a handful of persons throughout human history discover / uncover.

It is revealed via an ongoing diaglogue between the logus / holy spirit
and aspirant and is a cornucopia of all things ... 

It has various symbols (related to you over time) all accurate and include the symbolism that is part of the larger ritual ....

The larger ritual is ancient being pre Egyptian , pre first dynasty and is reflected throughout all cutures globally ... and implies pre Adamic 
beginnings though perhaps you can argue it is part of the teachings given
by God / Heaven to Enoch.

The global distribution of the symbolism implies more than a handful of 
aspirants have punched through the long (decades) ritual to achieve larger results over thousands of years. But this is likely ONLY, not that, but 
is, instead, development of psychic abililty to &quot;see&quot; both past and the future and the results of successful aspirants abilities NOT achieving those
abilities or achieving the grail / Holy Grail by those seers.

While this writer could detail the Grail and its features ... that task
is given only to Heaven / the Holy Spirit to pass to those worthy to 
ever know more.  

You can argue these details are part of the hidden Masonic traditions
that are mostly forgotten or never known by 99.999 % of all Masons 
(who then debate endlessly what they never knew anything about) as 
the Masonic rites / traditions are one path to discover the answers.
The real path is that traditional life long search that is rewarded over 
decades via ongoing series of revelations that tie together the very complicated and intricate details of the overall rite ... that is multi
layered and multi dimensional ... think of the Masonic ideas of buidling
&quot;your&quot; temple across reality and time ... your hookup to all things ,
to Heaven and to that Holy Grail. 

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[bg:&amp;#1057;&amp;#1074;&amp;#1077;&amp;#1097;&amp;#1077;&amp;#1085; &amp;#1043;&amp;#1088;&amp;#1072;&amp;#1072;&amp;#1083;]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>mit6zoftl73z8f81ql0ea5ztihjrim2</sha1>
    </revision>
    <revision>
      <id>10298492</id>
      <parentid>10182655</parentid>
      <timestamp>2005-02-12T04:19:04Z</timestamp>
      <contributor>
        <username>Mirv</username>
        <id>29678</id>
      </contributor>
      <minor/>
      <comment>Reverted edits by [[Special:Contributions/Lords Page|Lords Page]] to last version by Nk</comment>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text xml:space="preserve" bytes="15276">In [[Christian mythology]], the '''Holy Grail''' was the [[Dishware|dish]], [[plate (dishware)|plate]], [[Drinkware|cup]] or vessel that caught [[Jesus]]' blood during his [[crucifixion]]. It was said to have the power to heal all wounds. A theme joined to the Christianised [[King Arthur|Arthurian]] mythos relates to the [[Conquests of Camelot|quest for the Holy Grail]].  The legend may be a combination of genuine Christian lore with a [[Celtic mythology|Celtic myth]] of a [[cauldron]] endowed with special powers. Whether ''graal'' is Celtic or Old French, it never refers to any cup or bowl but this. Though some Christian revisionists insist that the Holy Grail is not to be confused with the [[Holy Chalice]], the vessel which [[Jesus]] used at the [[Last Supper]] to serve the wine, this has been the historical practice. The vessel of the Last Supper, a smallish cup made of marble is not lost, in fact it is still identified with several venerated relics, especially at the [[Spanish]] Cathedral of [[Valencia]].  

According to the ''Catholic Encyclopedia'', it was only after the cycle of Grail [[Romantic fiction|romances]] was well established, identifying the cup of the Last Supper with the Grail that late [[medieval]] writers came up with a [[false etymology]] from the fact that in [[Old French]], ''san grial'' means &quot;Holy Grail&quot; and ''sang rial'' means &quot;royal blood&quot;.  Since then, '''Sangreal''' is sometimes employed to lend a medievalizing air in referring to the Holy Grail. This connection with royal blood bore fruit in a modern best-seller linking many historical conspiracies (see below).

The development of the Grail legend has been traced in detail by cultural historians: it is a [[Goths|Gothic]] legend, which first came together in the form of written romances, deriving perhaps from some pre-Christian folkloric hints, in the later [[12th century|12th]] and early [[13th century|13th]] centuries. The early Grail romances centered on [[Percival]] and were then woven into the more general Arthurian fabric. The Grail romances were French; though they were translated into other European vernaculars, no new essential elements were added.

Myths of the Grail fall into two kinds of narratives: the history or fate of the Grail and the quest for the Grail.

==Origins of the Grail==
===Early Forms of the Grail===
The origins of the Grail can be traced back to early [[Celt|Celtic]] lore involving a hero/traveller who finds himself within an &quot;other world&quot;, one that is on a magical plain parallel to ours.  The transition from one world to another is usually described subtly, such as an unnoticeable and gradual change in the scenery.  The role of the Grail was simply as a platter, or dish, that would never go empty and be presented to signify the mystical nature of the other world.
===The Grail and the Fisher King===
The tale of the [[Fisher King]] involves a king who is lame in one leg (a euphemism for impotency) which in turn causes the land to become barren (infertile).  The hero ([[Gawain]], [[Percival]], or [[Galahad]]) encounters the Fisher King and is invited to a feast, as per the older other world tales.  The Grail is again presented as a platter of plenty but is also presented as part of a series of mystical relics, which also included a spear that drips blood and a broken sword.  The purpose of the relics is to incite the hero to question them and thereby, through some unknown means, break the enchantment of the infirmed king and the barren land, although the hero invariable fails to do so.

===The Grail and Arthurian Legend===
The story of the Fisher King and the Grail was later incorporated into the [[Matter of Britain|Arthurian myths]].  At first presented as a retelling of the older Fisher King tale--for example, one telling involved Percival encountering the Fisher King and the Grail before arriving at Camelot, it eventually evolved into an explicit &quot;quest&quot; for the Grail--one such quest ending with twelve knights (of undetermined origin) ascending into Heaven along with the Grail.

==The Grail Canon==
===Fate of the Grail===
While the Grail formally first appeared in the ''Perceval le Gallois'' of [[Chrétien de Troyes]] and the ''Parzival'' of [[Wolfram von Eschenbach]] -- both of whom describe it in connection with the [[Fisher King]] and how Percival failed to speak and thus cure the infirm king -- it was [[Robert de Boron]] who added the detail that the Grail was brought to Britain by [[Joseph of Arimathea]], when he travelled to the British Isles as the first Christian missionary to the country and established the first Christian church in the British Isles in his verse romance, ''Joseph d'Arimathie'', by [[Robert de Boron]], composed between [[1170]] and [[1212]].

A number of [[knights]] undertook the [[quest]] for the Grail, in tales that have become annexed to the Arthurian [[myth]]os.  Some of these tales tell of knights who succeeded, like Percival or the virginal [[Galahad]]; others tell of knights who failed to achieve the grail because of their [[tragedy|tragic]] flaws, like [[Lancelot]]. In Wolfram's telling, the Grail was kept safe at the castle of Munsalvaesche (''mons salvationis'') or [[Montsalvat]], entrusted to Titurel, the first Grail-King. Some, not least the monks of Montserrat, have identified the castle with the real sanctuary of [[Montserrat (mountain)|Montserrat]] in Catalonia.  

The fate of the Holy Grail is unknown, with ownership attributed to various groups (including the [[Knights Templar]]). There are cups claimed to be the Grail in several churches like the [[Valencia]] cathedral. The emerald chalice at [[Genoa]], which was obtained during the [[crusade]]s at [[Aleppo]] at great cost, has been less championed as the Holy Grail since an accident on the road while it was being returned from Paris after the fall of Napoleon revealed that the emerald was green glass. Other stories claim that the Grail is buried beneath [[Rosslyn Chapel]] or is to be found deep in the spring at [[Glastonbury Tor]]. Still other stories claim that the Grail was moved variously to either [[Nova Scotia]], or to [[Accokeek, Maryland]] by a closeted priest aboard Captain John Smith's ship.

===Quest for the Grail===
The date of Grail sequences in the Welsh folktales, the ''[[Mabinogion]]'' are older than the surviving manuscripts (13th century). There is an English poem ''Sir Percyvelle'', of the 15th century. Then the  legends of King Arthur and the Holy Grail were collected in the [[15th century]] by [[Thomas Malory]] for his ''[[Le Morte d'Arthur|Le Morte D' Arthur]] (Also spelled Le Morte Darthur) '' which gave the body of legend its classic form.

Important literary settings of Grail material include [[Chrétien de Troyes]]' ''Conte du Graal'' (French, late 12th century, the first romance to mention the Grail) and [[Wolfram von Eschenbach]]'s ''Parzifal'' (German, early 13th century).  The parallels between ''Conte du Graal'' and ''Parzifal'' are striking, but Wolfram stated that his tale came from a Provençal lay of a certain Kyot (Guiot). Wolfram also states that his romance is being transcribed for him, so the inference is that his sources were not written.  Kyot has never been identified, and many have suggested that he does not exist.

[[Richard Wagner]] recast Wolfram's version of the legend in his opera ''[[Parsifal]]'' ([[1883]]), opening the floodgates for the Grail in 20th century pop culture, both [[camp]] and campy.

===Four medieval relics===
During the Middle Ages, four major contenders for the position of Holy Grail stood out from the rest.
#The earliest record of a chalice from the Last Supper is of a two-handled silver chalice which was kept in a reliquary in a chapel near '''Jerusalem''' between the basilica of [[Golgotha]] and the Martyrium. This Grail appears only in the account of [[Arculf]], a 7th-century Anglo-Saxon pilgrim who saw it, and through an opening of the perforated lid of the reliquary where it reposed, touched it with his own hand which he had kissed.  According to him, it had the measure of a Gaulish [[pint]]. All the people of the city flocked to it with great veneration. (Arculf also saw the [[Holy Lance]] in the porch of the basilica of Constantine.) This is the only mention of the chalice situated in the Holy Land.
#There is a reference in the late thirteenth century to a copy of the Grail being at [[Constantinople]]. This occurs in the 13th century German romance, the  ''Younger Titurel'': &quot;A second costly dish, very noble and very precious, was fashioned to duplicate this one. In holiness it has no flaw. Men of Constantinople assayed it in their land, (finding) it richer in adornment, they accounted it the true grâl.&quot; This Grail was said to have been looted from the church of the Bucoleon during the [[Fourth Crusade]] and sent from Constantinople to [[Troyes]] by Garnier de Trainel, the then bishop of Troyes, in [[1204]]. It was recorded there in [[1610]], but it disappeared at the French Revolution.
#Of two Grail vessels that survive today, one is at '''[[Genoa]]''', in the cathedral. The hexagonal Genoese vessel is known as the ''sacro catino'', the holy basin. Traditionally said to be carved from [[emerald]], it is in fact a green Egyptian glass dish, about eighteen inches (37 cm) across. It was sent to Paris after Napoleon&amp;rsquo;s conquest of Italy, and was returned broken, which identified the emerald as glass. Its origin is uncertain; according to [[William of Tyre]], writing in about [[1170]], it was found in the mosque at [[Caesarea]] in [[1101]]: &quot;a vase of brilliant green shaped like a bowl.&quot; The Genoese, believing that it was of emerald, accepted it in lieu of a large sum of money.  An alternative story in a Spanish chronicle says that it was found when [[Alfonso VII of Castile]] captured [[Almeria]] from the Moors in [[1147]] with Genoese help, ''un uaso de piedra esmeralda que era tamanno como una escudiella'', &quot;a vase carved from emerald which was like a dish&quot;. The Genoese said that this was the only thing they wanted from the sack of Almeria.  The identification of the ''sacro catino'' with the Grail is not made until later, however, by [[Jacobus de Voragine]] in his chronicle of Genoa, written at the close of the 13th century. 
#The other surviving grail vessel is the ''santo cáliz'', an [[agate]] cup in the cathedral of '''Valencia'''. It has been set in a medieval mounting and given a foot made of an inverted cup of [[chalcedony]]. There is an Arabic inscription. The earliest secure reference to the chalice is in [[1399]], when it was given by the monastery of [[San Juan de la Peña]] to king [[Martin I of Aragon]] in exchange for a gold cup. By the end of the century a provenance had been invented for the chalice at Valencia, by which St Peter had brought it to Rome.

==Modern Interpretations==
===Casual metaphor===
The legend of the Holy Grail is the basis of the use of the devalued term ''holy grail'' in modern-day culture.  This or that &quot;holy grail&quot; is seen as the distant, all-but-unobtainable ultimate goal for a person, organization, or field to achieve. For instance, [[cold fusion]] or [[anti-gravity]] devices are sometimes characterized as the &quot;holy grail&quot; of applied physics.

===Modern retellings===
[[Image:holygrail.jpg|frame|right|''The Holy Grail'', by [[Dante Gabriel Rossetti]]]]
The combination of hushed reverence and overheated chromatic harmonies of [[Richard Wagner]]'s late opera ''[[Parsifal]]'' fatally inflated the Holy Grail theme, while it brought the old medieval tale back into a wider public consciousness. The high seriousness of the subject was also epitomized in Dante Gabriel Rossetti's painting (''illustrated''), in which [[William Morris]]'s soulful Titian-haired wife, at the time the painter's mistress, holds the Grail like a champagne glass that she is about to make ring with a snap of her long finger.  The Grail was overripe, and ''[[Monty Python and the Holy Grail]]'' ([[1975]]) deflated it and all pseudo-Arthurian posturings.  

The Grail had turned up in movies before: it debuted in a silent ''Parsifal''. In ''The Light of Faith'' ([[1922]]), Lon Chaney attempted to steal it, for the finest of reasons. ''[[The Silver Chalice]]'', a [[novel]] about the Grail by [[Thomas B. Costain]] was made into a [[1954]] movie (in which [[Paul Newman]] débuted), that is considered [[List of movies that have been considered the worst ever|notably bad]] by several critics, including Newman himself. ''Lancelot of the Lake'' ([[1974]]) is [[Robert Bresson]]'s gritty retelling. ''[[Excalibur (movie)|Excalibur]]'',  a more traditional sex-in-armor representation of an Arthurian tale, in which the Grail is little more than a prop. ''Brancaleone at the Crusades''.  ''[[The Fisher King (movie)|The Fisher King]]'' and ''[[Indiana Jones and the Last Crusade]]'' place the quest in modern settings, the one serious yet unavoidably faintly [[camp]], the other robustly self-parodying. The science fiction television series ''[[Babylon 5]]'' took the Quest into interstellar space in the [[1994]] episode &quot;[[Grail (Babylon 5)|Grail]]&quot;.

For the authors of ''[[Holy Blood, Holy Grail]]'', who assert that their research ultimately reveals that Jesus may not have died on the cross, but lived to marry [[Mary Magdalene]] and father children, whose [[Merovingian]] bloodline continues today, the Grail is a mere sideshow. [[Dan Brown]]'s bestselling novel  ''[[The Da Vinci Code]]'' is likewise based on the idea that the real Grail is not a cup but the earthly remains of [[Mary Magdalene]] (again cast as Jesus' wife),  plus a set of ancient documents telling the true story of Jesus, his teachings and descendants. In Brown's novel, it is hinted that the Grail was long buried below [[Rosslyn Chapel]] just like one tradition claims, but in recent decades its guardians had it relocated to a secret chamber below the Inverted Pyramid in front of the [[Louvre Museum]]. Of course, the latter location has never been mentioned in real Grail lore. Yet such was the public interest in even a fictionalized Grail that the museum soon had to rope off the exact location mentioned by Brown, lest visitors inflict any damage in a more or less serious attempt to access the supposed hidden chamber. (See: [[La Pyramide Inversée]].)

==Related articles==
[[Cornucopia]] and [[sampo]] are other mythical vessels with [[magic (paranormal)|magical]] powers.
==See Also==
*Other [[alleged relics of Jesus Christ]]
==Further Reading==
*''The Grail: From Celtic Myth to Christian Symbol'' by Roger Sherman Loomis ISBN 0691020752
*''The Holy Grail: It's Origins, Secrets, &amp; Meaning Revealed'' by Malcolm Godwin ISBN 0670851280

==External links==
* [http://historymedren.about.com/cs/holygrail/ About: Medieval History Net: The Holy Grail] A list of links to 6 important sites of reference on the Holy Grail

[[Category:Arthurian legend]]
[[Category:Alleged relics of Jesus ]]
[[Category:Metaphors]]

[[bg:&amp;#1057;&amp;#1074;&amp;#1077;&amp;#1097;&amp;#1077;&amp;#1085; &amp;#1043;&amp;#1088;&amp;#1072;&amp;#1072;&amp;#1083;]]
[[da:Den hellige gral]]
[[de:Heiliger Gral]]
[[es:Grial]]
[[fr:Graal]]
[[gl:Grial]]
[[nl:Heilige Graal]]
[[ja:&amp;#32854;&amp;#26479;]]
[[pl:Graal]]
[[pt:Santo Graal]]
[[ro:Graal]]</text>
      <sha1>j6rvly4ra8pbeph1mvu3wah51yb5y4y</sha1>
    </revision>
  </page>
</mediawiki>
"
